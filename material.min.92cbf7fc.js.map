{"version":3,"sources":["ripple.js","tabs.js","layout.js","mdlComponentHandler.js","rAF.js","button.js","checkbox.js","icon-toggle.js","menu.js","progress.js","radio.js","slider.js","snackbar.js","spinner.js","switch.js","textfield.js","tooltip.js","data-table.js"],"names":["MaterialTab","tab","ctx","element_","classList","contains","CssClasses_","MDL_JS_RIPPLE_EFFECT","rippleContainer","document","createElement","add","MDL_RIPPLE_CONTAINER","ripple","MDL_RIPPLE","appendChild","addEventListener","e","getAttribute","charAt","preventDefault","href","split","panel","querySelector","resetTabState_","resetPanelState_","ACTIVE_CLASS","MaterialLayoutTab","tabs","panels","layout","selectTab","content_","IS_ACTIVE","tabBar_","JS_RIPPLE_EFFECT","RIPPLE_CONTAINER","RIPPLE","TAB_MANUAL_SWITCH","show","componentHandler","upgradeDom","optJsClass","optCssClass","upgradeElement","element","upgradeElements","elements","upgradeAllRegistered","registerUpgradedCallback","jsClass","callback","register","config","downgradeElements","nodes","findRegisteredClass_","name","optReplace","i","registeredComponents_","length","className","getUpgradedListOfElement_","dataUpgraded","isElementUpgraded_","upgradedList","indexOf","createEvent_","eventType","bubbles","cancelable","window","CustomEvent","ev","createEvent","initEvent","upgradeDomInternal","cssClass","registeredClass","querySelectorAll","n","upgradeElementInternal","Element","Error","upgradingEv","dispatchEvent","defaultPrevented","classesToUpgrade","push","forEach","component","setAttribute","join","instance","classConstructor","componentConfigProperty_","createdComponents_","j","m","callbacks","widget","upgradedEv","deconstructComponentInternal","componentIndex","splice","upgrades","componentPlace","classAsString","upgradeElementsInternal","Array","isArray","prototype","slice","call","HTMLElement","children","upgradeAllRegisteredInternal","registerUpgradedCallbackInternal","regClass","registerInternal","widgetMissing","newConfig","constructor","item","hasOwnProperty","downgradeNodesInternal","downgradeNode","node","filter","NodeList","Node","ComponentConfigPublic","ComponentConfig","Component","documentElement","Date","now","getTime","vendors","requestAnimationFrame","vp","cancelAnimationFrame","test","navigator","userAgent","lastTime","nextTime","Math","max","setTimeout","clearTimeout","MaterialButton","this","init","Constant_","RIPPLE_EFFECT","blurHandler_","event","blur","disable","disabled","enable","rippleElement_","boundRippleBlurHandler","bind","boundButtonBlurHandler","MaterialCheckbox","TINY_TIMEOUT","INPUT","BOX_OUTLINE","FOCUS_HELPER","TICK_OUTLINE","RIPPLE_IGNORE_EVENTS","RIPPLE_CENTER","IS_FOCUSED","IS_DISABLED","IS_CHECKED","IS_UPGRADED","onChange_","updateClasses_","onFocus_","onBlur_","remove","onMouseUp_","blur_","checkDisabled","checkToggleState","inputElement_","checked","check","uncheck","boxOutline","tickContainer","tickOutline","rippleContainerElement_","boundRippleMouseUp","boundInputOnChange","boundInputOnFocus","boundInputOnBlur","boundElementMouseUp","MaterialIconToggle","boundElementOnMouseUp","MaterialMenu","TRANSITION_DURATION_SECONDS","TRANSITION_DURATION_FRACTION","CLOSE_TIMEOUT","Keycodes_","ENTER","ESCAPE","SPACE","UP_ARROW","DOWN_ARROW","CONTAINER","OUTLINE","ITEM","ITEM_RIPPLE_CONTAINER","IS_VISIBLE","IS_ANIMATING","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","UNALIGNED","container","parentElement","insertBefore","removeChild","container_","outline","outline_","forElId","forEl","getElementById","forElement_","handleForClick_","handleForKeyboardEvent_","items","boundItemKeydown_","handleItemKeyboardEvent_","boundItemClick_","handleItemClick_","tabIndex","evt","rect","getBoundingClientRect","forRect","style","right","top","offsetTop","offsetHeight","left","offsetLeft","bottom","toggle","keyCode","focus","currentIndex","target","MouseEvent","click","hide","hasAttribute","stopPropagation","closing_","applyClip_","height","width","clip","removeAnimationEndListener_","addAnimationEndListener_","transitionDuration","itemDelay","transitionDelay","parentNode","removeEventListener","removeProperty","MaterialProgress","INDETERMINATE_CLASS","setProgress","p","progressbar_","setBuffer","bufferbar_","auxbar_","el","MaterialRadio","JS_RADIO","RADIO_BTN","RADIO_OUTER_CIRCLE","RADIO_INNER_CIRCLE","radios","getElementsByClassName","btnElement_","onMouseup_","boundChangeHandler_","boundFocusHandler_","boundBlurHandler_","boundMouseUpHandler_","outerCircle","innerCircle","MaterialSlider","isIE_","msPointerEnabled","IE_CONTAINER","SLIDER_CONTAINER","BACKGROUND_FLEX","BACKGROUND_LOWER","BACKGROUND_UPPER","IS_LOWEST_VALUE","onInput_","updateValueStyles_","onContainerMouseDown_","newEvent","buttons","clientX","clientY","y","fraction","value","min","backgroundLower_","flex","webkitFlex","backgroundUpper_","change","containerIE","backgroundFlex","boundInputHandler","boundChangeHandler","boundMouseUpHandler","boundContainerMouseDownHandler","MaterialSnackbar","textElement_","cssClasses_","MESSAGE","actionElement_","ACTION","active","actionHandler_","undefined","message_","actionText_","queuedNotifications_","setActionHidden_","ANIMATION_LENGTH","SNACKBAR","ACTIVE","displaySnackbar_","textContent","cleanup_","timeout_","showSnackbar","data","checkQueue_","shift","Boolean","removeAttribute","MaterialSpinner","MDL_SPINNER_LAYER_COUNT","MDL_SPINNER_LAYER","MDL_SPINNER_CIRCLE_CLIPPER","MDL_SPINNER_CIRCLE","MDL_SPINNER_GAP_PATCH","MDL_SPINNER_LEFT","MDL_SPINNER_RIGHT","createLayer","index","layer","leftClipper","gapPatch","rightClipper","circleOwners","circle","stop","start","MaterialSwitch","TRACK","THUMB","on","off","track","thumb","focusHelper","boundFocusHandler","boundBlurHandler","MaterialTabs","TAB_CLASS","PANEL_CLASS","UPGRADED_CLASS","MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS","initTabs_","tabs_","panels_","k","MaterialTextfield","maxRows","NO_MAX_ROWS","MAX_ROWS_ATTRIBUTE","LABEL","IS_DIRTY","IS_INVALID","HAS_PLACEHOLDER","onKeyDown_","currentRowCount","onReset_","checkValidity","checkDirty","checkFocus","input_","validity","valid","label_","parseInt","isNaN","boundUpdateClassesHandler","boundResetHandler","boundKeyDownHandler","invalid","MaterialTooltip","BOTTOM","LEFT","RIGHT","TOP","handleMouseEnter_","props","marginLeft","offsetWidth","marginTop","hideTooltip_","boundMouseEnterHandler","boundMouseLeaveAndScrollHandler","MaterialLayout","MAX_WIDTH","TAB_SCROLL_PIXELS","RESIZE_TIMEOUT","MENU_ICON","CHEVRON_LEFT","CHEVRON_RIGHT","Mode_","STANDARD","SEAMED","WATERFALL","SCROLL","HEADER","DRAWER","CONTENT","DRAWER_BTN","ICON","HEADER_SEAMED","HEADER_WATERFALL","HEADER_SCROLL","FIXED_HEADER","OBFUSCATOR","TAB_BAR","TAB_CONTAINER","TAB","TAB_BAR_BUTTON","TAB_BAR_LEFT_BUTTON","TAB_BAR_RIGHT_BUTTON","PANEL","HAS_DRAWER","HAS_TABS","HAS_SCROLLING_HEADER","CASTING_SHADOW","IS_COMPACT","IS_SMALL_SCREEN","IS_DRAWER_OPEN","ON_LARGE_SCREEN","ON_SMALL_SCREEN","contentScrollHandler_","header_","headerVisible","scrollTop","keyboardEventHandler_","drawer_","toggleDrawer","screenSizeHandler_","screenSizeMediaQuery_","matches","obfuscator_","drawerToggleHandler_","type","headerTransitionEndHandler_","headerClickHandler_","tabBar","drawerButton","focusedElement","directChildren","childNodes","numChildren","c","child","persisted","overflowY","mode","drawerButtonIcon","innerHTML","firstChild","obfuscator","matchMedia","addListener","tabContainer","leftButton","leftButtonIcon","scrollLeft","rightButton","rightButtonIcon","tabUpdateHandler","scrollWidth","windowResizeHandler","resizeTimeoutId_","MaterialDataTable","DATA_TABLE","SELECTABLE","SELECT_ELEMENT","IS_SELECTED","selectRow_","checkbox","row","opt_rows","createCheckbox_","label","labelClasses","firstHeader","bodyRows","footRows","rows","concat","th","headerCheckbox","firstCell","td","nodeName","toUpperCase","rowCheckbox","MaterialRipple","INITIAL_SCALE","INITIAL_SIZE","INITIAL_OPACITY","FINAL_OPACITY","FINAL_SCALE","RIPPLE_EFFECT_IGNORE_EVENTS","downHandler_","boundHeight","boundWidth","rippleSize_","sqrt","ignoringMouseDown_","frameCount","getFrameCount","setFrameCount","x","bound","currentTarget","round","touches","setRippleXY","setRippleStyles","animFrameHandler","upHandler_","detail","recentering","frameCount_","x_","y_","boundDownHandler","boundUpHandler","fC","getRippleElement","newX","newY","transformString","scale","offset","webkitTransform","msTransform","transform"],"mappings":"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","file":"material.min.92cbf7fc.js","sourceRoot":"..","sourcesContent":["/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Ripple MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialRipple = function MaterialRipple(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialRipple'] = MaterialRipple;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialRipple.prototype.Constant_ = {\n    INITIAL_SCALE: 'scale(0.0001, 0.0001)',\n    INITIAL_SIZE: '1px',\n    INITIAL_OPACITY: '0.4',\n    FINAL_OPACITY: '0',\n    FINAL_SCALE: ''\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialRipple.prototype.CssClasses_ = {\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE: 'mdl-ripple',\n    IS_ANIMATING: 'is-animating',\n    IS_VISIBLE: 'is-visible'\n};\n/**\n   * Handle mouse / finger down on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRipple.prototype.downHandler_ = function (event) {\n    if (!this.rippleElement_.style.width && !this.rippleElement_.style.height) {\n        var rect = this.element_.getBoundingClientRect();\n        this.boundHeight = rect.height;\n        this.boundWidth = rect.width;\n        this.rippleSize_ = Math.sqrt(rect.width * rect.width + rect.height * rect.height) * 2 + 2;\n        this.rippleElement_.style.width = this.rippleSize_ + 'px';\n        this.rippleElement_.style.height = this.rippleSize_ + 'px';\n    }\n    this.rippleElement_.classList.add(this.CssClasses_.IS_VISIBLE);\n    if (event.type === 'mousedown' && this.ignoringMouseDown_) {\n        this.ignoringMouseDown_ = false;\n    } else {\n        if (event.type === 'touchstart') {\n            this.ignoringMouseDown_ = true;\n        }\n        var frameCount = this.getFrameCount();\n        if (frameCount > 0) {\n            return;\n        }\n        this.setFrameCount(1);\n        var bound = event.currentTarget.getBoundingClientRect();\n        var x;\n        var y;\n        // Check if we are handling a keyboard click.\n        if (event.clientX === 0 && event.clientY === 0) {\n            x = Math.round(bound.width / 2);\n            y = Math.round(bound.height / 2);\n        } else {\n            var clientX = event.clientX !== undefined ? event.clientX : event.touches[0].clientX;\n            var clientY = event.clientY !== undefined ? event.clientY : event.touches[0].clientY;\n            x = Math.round(clientX - bound.left);\n            y = Math.round(clientY - bound.top);\n        }\n        this.setRippleXY(x, y);\n        this.setRippleStyles(true);\n        window.requestAnimationFrame(this.animFrameHandler.bind(this));\n    }\n};\n/**\n   * Handle mouse / finger up on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRipple.prototype.upHandler_ = function (event) {\n    // Don't fire for the artificial \"mouseup\" generated by a double-click.\n    if (event && event.detail !== 2) {\n        // Allow a repaint to occur before removing this class, so the animation\n        // shows for tap events, which seem to trigger a mouseup too soon after\n        // mousedown.\n        window.setTimeout(function () {\n            this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE);\n        }.bind(this), 0);\n    }\n};\n/**\n   * Initialize element.\n   */\nMaterialRipple.prototype.init = function () {\n    if (this.element_) {\n        var recentering = this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);\n        if (!this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)) {\n            this.rippleElement_ = this.element_.querySelector('.' + this.CssClasses_.RIPPLE);\n            this.frameCount_ = 0;\n            this.rippleSize_ = 0;\n            this.x_ = 0;\n            this.y_ = 0;\n            // Touch start produces a compat mouse down event, which would cause a\n            // second ripples. To avoid that, we use this property to ignore the first\n            // mouse down after a touch start.\n            this.ignoringMouseDown_ = false;\n            this.boundDownHandler = this.downHandler_.bind(this);\n            this.element_.addEventListener('mousedown', this.boundDownHandler);\n            this.element_.addEventListener('touchstart', this.boundDownHandler);\n            this.boundUpHandler = this.upHandler_.bind(this);\n            this.element_.addEventListener('mouseup', this.boundUpHandler);\n            this.element_.addEventListener('mouseleave', this.boundUpHandler);\n            this.element_.addEventListener('touchend', this.boundUpHandler);\n            this.element_.addEventListener('blur', this.boundUpHandler);\n            /**\n         * Getter for frameCount_.\n         * @return {number} the frame count.\n         */\n            this.getFrameCount = function () {\n                return this.frameCount_;\n            };\n            /**\n         * Setter for frameCount_.\n         * @param {number} fC the frame count.\n         */\n            this.setFrameCount = function (fC) {\n                this.frameCount_ = fC;\n            };\n            /**\n         * Getter for rippleElement_.\n         * @return {Element} the ripple element.\n         */\n            this.getRippleElement = function () {\n                return this.rippleElement_;\n            };\n            /**\n         * Sets the ripple X and Y coordinates.\n         * @param  {number} newX the new X coordinate\n         * @param  {number} newY the new Y coordinate\n         */\n            this.setRippleXY = function (newX, newY) {\n                this.x_ = newX;\n                this.y_ = newY;\n            };\n            /**\n         * Sets the ripple styles.\n         * @param  {boolean} start whether or not this is the start frame.\n         */\n            this.setRippleStyles = function (start) {\n                if (this.rippleElement_ !== null) {\n                    var transformString;\n                    var scale;\n                    var size;\n                    var offset = 'translate(' + this.x_ + 'px, ' + this.y_ + 'px)';\n                    if (start) {\n                        scale = this.Constant_.INITIAL_SCALE;\n                        size = this.Constant_.INITIAL_SIZE;\n                    } else {\n                        scale = this.Constant_.FINAL_SCALE;\n                        size = this.rippleSize_ + 'px';\n                        if (recentering) {\n                            offset = 'translate(' + this.boundWidth / 2 + 'px, ' + this.boundHeight / 2 + 'px)';\n                        }\n                    }\n                    transformString = 'translate(-50%, -50%) ' + offset + scale;\n                    this.rippleElement_.style.webkitTransform = transformString;\n                    this.rippleElement_.style.msTransform = transformString;\n                    this.rippleElement_.style.transform = transformString;\n                    if (start) {\n                        this.rippleElement_.classList.remove(this.CssClasses_.IS_ANIMATING);\n                    } else {\n                        this.rippleElement_.classList.add(this.CssClasses_.IS_ANIMATING);\n                    }\n                }\n            };\n            /**\n         * Handles an animation frame.\n         */\n            this.animFrameHandler = function () {\n                if (this.frameCount_-- > 0) {\n                    window.requestAnimationFrame(this.animFrameHandler.bind(this));\n                } else {\n                    this.setRippleStyles(false);\n                }\n            };\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialRipple,\n    classAsString: 'MaterialRipple',\n    cssClass: 'mdl-js-ripple-effect',\n    widget: false\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Tabs MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {Element} element The element that will be upgraded.\n   */\nvar MaterialTabs = function MaterialTabs(element) {\n    // Stores the HTML element.\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialTabs'] = MaterialTabs;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTabs.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTabs.prototype.CssClasses_ = {\n    TAB_CLASS: 'mdl-tabs__tab',\n    PANEL_CLASS: 'mdl-tabs__panel',\n    ACTIVE_CLASS: 'is-active',\n    UPGRADED_CLASS: 'is-upgraded',\n    MDL_JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    MDL_RIPPLE_CONTAINER: 'mdl-tabs__ripple-container',\n    MDL_RIPPLE: 'mdl-ripple',\n    MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events'\n};\n/**\n   * Handle clicks to a tabs component\n   *\n   * @private\n   */\nMaterialTabs.prototype.initTabs_ = function () {\n    if (this.element_.classList.contains(this.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n        this.element_.classList.add(this.CssClasses_.MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS);\n    }\n    // Select element tabs, document panels\n    this.tabs_ = this.element_.querySelectorAll('.' + this.CssClasses_.TAB_CLASS);\n    this.panels_ = this.element_.querySelectorAll('.' + this.CssClasses_.PANEL_CLASS);\n    // Create new tabs for each tab element\n    for (var i = 0; i < this.tabs_.length; i++) {\n        new MaterialTab(this.tabs_[i], this);\n    }\n    this.element_.classList.add(this.CssClasses_.UPGRADED_CLASS);\n};\n/**\n   * Reset tab state, dropping active classes\n   *\n   * @private\n   */\nMaterialTabs.prototype.resetTabState_ = function () {\n    for (var k = 0; k < this.tabs_.length; k++) {\n        this.tabs_[k].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n    }\n};\n/**\n   * Reset panel state, droping active classes\n   *\n   * @private\n   */\nMaterialTabs.prototype.resetPanelState_ = function () {\n    for (var j = 0; j < this.panels_.length; j++) {\n        this.panels_[j].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n    }\n};\n/**\n   * Initialize element.\n   */\nMaterialTabs.prototype.init = function () {\n    if (this.element_) {\n        this.initTabs_();\n    }\n};\n/**\n   * Constructor for an individual tab.\n   *\n   * @constructor\n   * @param {Element} tab The HTML element for the tab.\n   * @param {MaterialTabs} ctx The MaterialTabs object that owns the tab.\n   */\nfunction MaterialTab(tab, ctx) {\n    if (tab) {\n        if (ctx.element_.classList.contains(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n            var rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(ctx.CssClasses_.MDL_RIPPLE_CONTAINER);\n            rippleContainer.classList.add(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT);\n            var ripple = document.createElement('span');\n            ripple.classList.add(ctx.CssClasses_.MDL_RIPPLE);\n            rippleContainer.appendChild(ripple);\n            tab.appendChild(rippleContainer);\n        }\n        tab.addEventListener('click', function (e) {\n            if (tab.getAttribute('href').charAt(0) === '#') {\n                e.preventDefault();\n                var href = tab.href.split('#')[1];\n                var panel = ctx.element_.querySelector('#' + href);\n                ctx.resetTabState_();\n                ctx.resetPanelState_();\n                tab.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n                panel.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n            }\n        });\n    }\n}\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialTabs,\n    classAsString: 'MaterialTabs',\n    cssClass: 'mdl-js-tabs'\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Layout MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialLayout = function MaterialLayout(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialLayout'] = MaterialLayout;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialLayout.prototype.Constant_ = {\n    MAX_WIDTH: '(max-width: 1024px)',\n    TAB_SCROLL_PIXELS: 100,\n    RESIZE_TIMEOUT: 100,\n    MENU_ICON: '&#xE5D2;',\n    CHEVRON_LEFT: 'chevron_left',\n    CHEVRON_RIGHT: 'chevron_right'\n};\n/**\n   * Keycodes, for code readability.\n   *\n   * @enum {number}\n   * @private\n   */\nMaterialLayout.prototype.Keycodes_ = {\n    ENTER: 13,\n    ESCAPE: 27,\n    SPACE: 32\n};\n/**\n   * Modes.\n   *\n   * @enum {number}\n   * @private\n   */\nMaterialLayout.prototype.Mode_ = {\n    STANDARD: 0,\n    SEAMED: 1,\n    WATERFALL: 2,\n    SCROLL: 3\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialLayout.prototype.CssClasses_ = {\n    CONTAINER: 'mdl-layout__container',\n    HEADER: 'mdl-layout__header',\n    DRAWER: 'mdl-layout__drawer',\n    CONTENT: 'mdl-layout__content',\n    DRAWER_BTN: 'mdl-layout__drawer-button',\n    ICON: 'material-icons',\n    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-layout__tab-ripple-container',\n    RIPPLE: 'mdl-ripple',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    HEADER_SEAMED: 'mdl-layout__header--seamed',\n    HEADER_WATERFALL: 'mdl-layout__header--waterfall',\n    HEADER_SCROLL: 'mdl-layout__header--scroll',\n    FIXED_HEADER: 'mdl-layout--fixed-header',\n    OBFUSCATOR: 'mdl-layout__obfuscator',\n    TAB_BAR: 'mdl-layout__tab-bar',\n    TAB_CONTAINER: 'mdl-layout__tab-bar-container',\n    TAB: 'mdl-layout__tab',\n    TAB_BAR_BUTTON: 'mdl-layout__tab-bar-button',\n    TAB_BAR_LEFT_BUTTON: 'mdl-layout__tab-bar-left-button',\n    TAB_BAR_RIGHT_BUTTON: 'mdl-layout__tab-bar-right-button',\n    TAB_MANUAL_SWITCH: 'mdl-layout__tab-manual-switch',\n    PANEL: 'mdl-layout__tab-panel',\n    HAS_DRAWER: 'has-drawer',\n    HAS_TABS: 'has-tabs',\n    HAS_SCROLLING_HEADER: 'has-scrolling-header',\n    CASTING_SHADOW: 'is-casting-shadow',\n    IS_COMPACT: 'is-compact',\n    IS_SMALL_SCREEN: 'is-small-screen',\n    IS_DRAWER_OPEN: 'is-visible',\n    IS_ACTIVE: 'is-active',\n    IS_UPGRADED: 'is-upgraded',\n    IS_ANIMATING: 'is-animating',\n    ON_LARGE_SCREEN: 'mdl-layout--large-screen-only',\n    ON_SMALL_SCREEN: 'mdl-layout--small-screen-only'\n};\n/**\n   * Handles scrolling on the content.\n   *\n   * @private\n   */\nMaterialLayout.prototype.contentScrollHandler_ = function () {\n    if (this.header_.classList.contains(this.CssClasses_.IS_ANIMATING)) {\n        return;\n    }\n    var headerVisible = !this.element_.classList.contains(this.CssClasses_.IS_SMALL_SCREEN) || this.element_.classList.contains(this.CssClasses_.FIXED_HEADER);\n    if (this.content_.scrollTop > 0 && !this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n        this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\n        this.header_.classList.add(this.CssClasses_.IS_COMPACT);\n        if (headerVisible) {\n            this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n        }\n    } else if (this.content_.scrollTop <= 0 && this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n        this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n        this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\n        if (headerVisible) {\n            this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n        }\n    }\n};\n/**\n   * Handles a keyboard event on the drawer.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialLayout.prototype.keyboardEventHandler_ = function (evt) {\n    // Only react when the drawer is open.\n    if (evt.keyCode === this.Keycodes_.ESCAPE && this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)) {\n        this.toggleDrawer();\n    }\n};\n/**\n   * Handles changes in screen size.\n   *\n   * @private\n   */\nMaterialLayout.prototype.screenSizeHandler_ = function () {\n    if (this.screenSizeMediaQuery_.matches) {\n        this.element_.classList.add(this.CssClasses_.IS_SMALL_SCREEN);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_SMALL_SCREEN);\n        // Collapse drawer (if any) when moving to a large screen size.\n        if (this.drawer_) {\n            this.drawer_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);\n            this.obfuscator_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);\n        }\n    }\n};\n/**\n   * Handles events of drawer button.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialLayout.prototype.drawerToggleHandler_ = function (evt) {\n    if (evt && evt.type === 'keydown') {\n        if (evt.keyCode === this.Keycodes_.SPACE || evt.keyCode === this.Keycodes_.ENTER) {\n            // prevent scrolling in drawer nav\n            evt.preventDefault();\n        } else {\n            // prevent other keys\n            return;\n        }\n    }\n    this.toggleDrawer();\n};\n/**\n   * Handles (un)setting the `is-animating` class\n   *\n   * @private\n   */\nMaterialLayout.prototype.headerTransitionEndHandler_ = function () {\n    this.header_.classList.remove(this.CssClasses_.IS_ANIMATING);\n};\n/**\n   * Handles expanding the header on click\n   *\n   * @private\n   */\nMaterialLayout.prototype.headerClickHandler_ = function () {\n    if (this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n        this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\n        this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n    }\n};\n/**\n   * Reset tab state, dropping active classes\n   *\n   * @private\n   */\nMaterialLayout.prototype.resetTabState_ = function (tabBar) {\n    for (var k = 0; k < tabBar.length; k++) {\n        tabBar[k].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n};\n/**\n   * Reset panel state, droping active classes\n   *\n   * @private\n   */\nMaterialLayout.prototype.resetPanelState_ = function (panels) {\n    for (var j = 0; j < panels.length; j++) {\n        panels[j].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n};\n/**\n  * Toggle drawer state\n  *\n  * @public\n  */\nMaterialLayout.prototype.toggleDrawer = function () {\n    var drawerButton = this.element_.querySelector('.' + this.CssClasses_.DRAWER_BTN);\n    this.drawer_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);\n    this.obfuscator_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);\n    // Set accessibility properties.\n    if (this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)) {\n        this.drawer_.setAttribute('aria-hidden', 'false');\n        drawerButton.setAttribute('aria-expanded', 'true');\n    } else {\n        this.drawer_.setAttribute('aria-hidden', 'true');\n        drawerButton.setAttribute('aria-expanded', 'false');\n    }\n};\nMaterialLayout.prototype['toggleDrawer'] = MaterialLayout.prototype.toggleDrawer;\n/**\n   * Initialize element.\n   */\nMaterialLayout.prototype.init = function () {\n    if (this.element_) {\n        var container = document.createElement('div');\n        container.classList.add(this.CssClasses_.CONTAINER);\n        var focusedElement = this.element_.querySelector(':focus');\n        this.element_.parentElement.insertBefore(container, this.element_);\n        this.element_.parentElement.removeChild(this.element_);\n        container.appendChild(this.element_);\n        if (focusedElement) {\n            focusedElement.focus();\n        }\n        var directChildren = this.element_.childNodes;\n        var numChildren = directChildren.length;\n        for (var c = 0; c < numChildren; c++) {\n            var child = directChildren[c];\n            if (child.classList && child.classList.contains(this.CssClasses_.HEADER)) {\n                this.header_ = child;\n            }\n            if (child.classList && child.classList.contains(this.CssClasses_.DRAWER)) {\n                this.drawer_ = child;\n            }\n            if (child.classList && child.classList.contains(this.CssClasses_.CONTENT)) {\n                this.content_ = child;\n            }\n        }\n        window.addEventListener('pageshow', function (e) {\n            if (e.persisted) {\n                // when page is loaded from back/forward cache\n                // trigger repaint to let layout scroll in safari\n                this.element_.style.overflowY = 'hidden';\n                requestAnimationFrame(function () {\n                    this.element_.style.overflowY = '';\n                }.bind(this));\n            }\n        }.bind(this), false);\n        if (this.header_) {\n            this.tabBar_ = this.header_.querySelector('.' + this.CssClasses_.TAB_BAR);\n        }\n        var mode = this.Mode_.STANDARD;\n        if (this.header_) {\n            if (this.header_.classList.contains(this.CssClasses_.HEADER_SEAMED)) {\n                mode = this.Mode_.SEAMED;\n            } else if (this.header_.classList.contains(this.CssClasses_.HEADER_WATERFALL)) {\n                mode = this.Mode_.WATERFALL;\n                this.header_.addEventListener('transitionend', this.headerTransitionEndHandler_.bind(this));\n                this.header_.addEventListener('click', this.headerClickHandler_.bind(this));\n            } else if (this.header_.classList.contains(this.CssClasses_.HEADER_SCROLL)) {\n                mode = this.Mode_.SCROLL;\n                container.classList.add(this.CssClasses_.HAS_SCROLLING_HEADER);\n            }\n            if (mode === this.Mode_.STANDARD) {\n                this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\n                if (this.tabBar_) {\n                    this.tabBar_.classList.add(this.CssClasses_.CASTING_SHADOW);\n                }\n            } else if (mode === this.Mode_.SEAMED || mode === this.Mode_.SCROLL) {\n                this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n                if (this.tabBar_) {\n                    this.tabBar_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n                }\n            } else if (mode === this.Mode_.WATERFALL) {\n                // Add and remove shadows depending on scroll position.\n                // Also add/remove auxiliary class for styling of the compact version of\n                // the header.\n                this.content_.addEventListener('scroll', this.contentScrollHandler_.bind(this));\n                this.contentScrollHandler_();\n            }\n        }\n        // Add drawer toggling button to our layout, if we have an openable drawer.\n        if (this.drawer_) {\n            var drawerButton = this.element_.querySelector('.' + this.CssClasses_.DRAWER_BTN);\n            if (!drawerButton) {\n                drawerButton = document.createElement('div');\n                drawerButton.setAttribute('aria-expanded', 'false');\n                drawerButton.setAttribute('role', 'button');\n                drawerButton.setAttribute('tabindex', '0');\n                drawerButton.classList.add(this.CssClasses_.DRAWER_BTN);\n                var drawerButtonIcon = document.createElement('i');\n                drawerButtonIcon.classList.add(this.CssClasses_.ICON);\n                drawerButtonIcon.innerHTML = this.Constant_.MENU_ICON;\n                drawerButton.appendChild(drawerButtonIcon);\n            }\n            if (this.drawer_.classList.contains(this.CssClasses_.ON_LARGE_SCREEN)) {\n                //If drawer has ON_LARGE_SCREEN class then add it to the drawer toggle button as well.\n                drawerButton.classList.add(this.CssClasses_.ON_LARGE_SCREEN);\n            } else if (this.drawer_.classList.contains(this.CssClasses_.ON_SMALL_SCREEN)) {\n                //If drawer has ON_SMALL_SCREEN class then add it to the drawer toggle button as well.\n                drawerButton.classList.add(this.CssClasses_.ON_SMALL_SCREEN);\n            }\n            drawerButton.addEventListener('click', this.drawerToggleHandler_.bind(this));\n            drawerButton.addEventListener('keydown', this.drawerToggleHandler_.bind(this));\n            // Add a class if the layout has a drawer, for altering the left padding.\n            // Adds the HAS_DRAWER to the elements since this.header_ may or may\n            // not be present.\n            this.element_.classList.add(this.CssClasses_.HAS_DRAWER);\n            // If we have a fixed header, add the button to the header rather than\n            // the layout.\n            if (this.element_.classList.contains(this.CssClasses_.FIXED_HEADER)) {\n                this.header_.insertBefore(drawerButton, this.header_.firstChild);\n            } else {\n                this.element_.insertBefore(drawerButton, this.content_);\n            }\n            var obfuscator = document.createElement('div');\n            obfuscator.classList.add(this.CssClasses_.OBFUSCATOR);\n            this.element_.appendChild(obfuscator);\n            obfuscator.addEventListener('click', this.drawerToggleHandler_.bind(this));\n            this.obfuscator_ = obfuscator;\n            this.drawer_.addEventListener('keydown', this.keyboardEventHandler_.bind(this));\n            this.drawer_.setAttribute('aria-hidden', 'true');\n        }\n        // Keep an eye on screen size, and add/remove auxiliary class for styling\n        // of small screens.\n        this.screenSizeMediaQuery_ = window.matchMedia(this.Constant_.MAX_WIDTH);\n        this.screenSizeMediaQuery_.addListener(this.screenSizeHandler_.bind(this));\n        this.screenSizeHandler_();\n        // Initialize tabs, if any.\n        if (this.header_ && this.tabBar_) {\n            this.element_.classList.add(this.CssClasses_.HAS_TABS);\n            var tabContainer = document.createElement('div');\n            tabContainer.classList.add(this.CssClasses_.TAB_CONTAINER);\n            this.header_.insertBefore(tabContainer, this.tabBar_);\n            this.header_.removeChild(this.tabBar_);\n            var leftButton = document.createElement('div');\n            leftButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n            leftButton.classList.add(this.CssClasses_.TAB_BAR_LEFT_BUTTON);\n            var leftButtonIcon = document.createElement('i');\n            leftButtonIcon.classList.add(this.CssClasses_.ICON);\n            leftButtonIcon.textContent = this.Constant_.CHEVRON_LEFT;\n            leftButton.appendChild(leftButtonIcon);\n            leftButton.addEventListener('click', function () {\n                this.tabBar_.scrollLeft -= this.Constant_.TAB_SCROLL_PIXELS;\n            }.bind(this));\n            var rightButton = document.createElement('div');\n            rightButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n            rightButton.classList.add(this.CssClasses_.TAB_BAR_RIGHT_BUTTON);\n            var rightButtonIcon = document.createElement('i');\n            rightButtonIcon.classList.add(this.CssClasses_.ICON);\n            rightButtonIcon.textContent = this.Constant_.CHEVRON_RIGHT;\n            rightButton.appendChild(rightButtonIcon);\n            rightButton.addEventListener('click', function () {\n                this.tabBar_.scrollLeft += this.Constant_.TAB_SCROLL_PIXELS;\n            }.bind(this));\n            tabContainer.appendChild(leftButton);\n            tabContainer.appendChild(this.tabBar_);\n            tabContainer.appendChild(rightButton);\n            // Add and remove tab buttons depending on scroll position and total\n            // window size.\n            var tabUpdateHandler = function () {\n                if (this.tabBar_.scrollLeft > 0) {\n                    leftButton.classList.add(this.CssClasses_.IS_ACTIVE);\n                } else {\n                    leftButton.classList.remove(this.CssClasses_.IS_ACTIVE);\n                }\n                if (this.tabBar_.scrollLeft < this.tabBar_.scrollWidth - this.tabBar_.offsetWidth) {\n                    rightButton.classList.add(this.CssClasses_.IS_ACTIVE);\n                } else {\n                    rightButton.classList.remove(this.CssClasses_.IS_ACTIVE);\n                }\n            }.bind(this);\n            this.tabBar_.addEventListener('scroll', tabUpdateHandler);\n            tabUpdateHandler();\n            // Update tabs when the window resizes.\n            var windowResizeHandler = function () {\n                // Use timeouts to make sure it doesn't happen too often.\n                if (this.resizeTimeoutId_) {\n                    clearTimeout(this.resizeTimeoutId_);\n                }\n                this.resizeTimeoutId_ = setTimeout(function () {\n                    tabUpdateHandler();\n                    this.resizeTimeoutId_ = null;\n                }.bind(this), this.Constant_.RESIZE_TIMEOUT);\n            }.bind(this);\n            window.addEventListener('resize', windowResizeHandler);\n            if (this.tabBar_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n                this.tabBar_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            }\n            // Select element tabs, document panels\n            var tabs = this.tabBar_.querySelectorAll('.' + this.CssClasses_.TAB);\n            var panels = this.content_.querySelectorAll('.' + this.CssClasses_.PANEL);\n            // Create new tabs for each tab element\n            for (var i = 0; i < tabs.length; i++) {\n                new MaterialLayoutTab(tabs[i], tabs, panels, this);\n            }\n        }\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n/**\n   * Constructor for an individual tab.\n   *\n   * @constructor\n   * @param {HTMLElement} tab The HTML element for the tab.\n   * @param {!Array<HTMLElement>} tabs Array with HTML elements for all tabs.\n   * @param {!Array<HTMLElement>} panels Array with HTML elements for all panels.\n   * @param {MaterialLayout} layout The MaterialLayout object that owns the tab.\n   */\nfunction MaterialLayoutTab(tab, tabs, panels, layout) {\n    /**\n     * Auxiliary method to programmatically select a tab in the UI.\n     */\n    function selectTab() {\n        var href = tab.href.split('#')[1];\n        var panel = layout.content_.querySelector('#' + href);\n        layout.resetTabState_(tabs);\n        layout.resetPanelState_(panels);\n        tab.classList.add(layout.CssClasses_.IS_ACTIVE);\n        panel.classList.add(layout.CssClasses_.IS_ACTIVE);\n    }\n    if (layout.tabBar_.classList.contains(layout.CssClasses_.JS_RIPPLE_EFFECT)) {\n        var rippleContainer = document.createElement('span');\n        rippleContainer.classList.add(layout.CssClasses_.RIPPLE_CONTAINER);\n        rippleContainer.classList.add(layout.CssClasses_.JS_RIPPLE_EFFECT);\n        var ripple = document.createElement('span');\n        ripple.classList.add(layout.CssClasses_.RIPPLE);\n        rippleContainer.appendChild(ripple);\n        tab.appendChild(rippleContainer);\n    }\n    if (!layout.tabBar_.classList.contains(layout.CssClasses_.TAB_MANUAL_SWITCH)) {\n        tab.addEventListener('click', function (e) {\n            if (tab.getAttribute('href').charAt(0) === '#') {\n                e.preventDefault();\n                selectTab();\n            }\n        });\n    }\n    tab.show = selectTab;\n}\nwindow['MaterialLayoutTab'] = MaterialLayoutTab;\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialLayout,\n    classAsString: 'MaterialLayout',\n    cssClass: 'mdl-js-layout'\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A component handler interface using the revealing module design pattern.\n * More details on this design pattern here:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n *\n * @author Jason Mayes.\n */\n/* exported componentHandler */\n\n// Pre-defining the componentHandler interface, for closure documentation and\n// static verification.\nvar componentHandler = {\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   *\n   * @param {string=} optJsClass the programatic name of the element class we\n   * need to create a new instance of.\n   * @param {string=} optCssClass the name of the CSS class elements of this\n   * type will have.\n   */\n  upgradeDom: function(optJsClass, optCssClass) {},\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   *\n   * @param {!Element} element The element we wish to upgrade.\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\n   * the element to.\n   */\n  upgradeElement: function(element, optJsClass) {},\n  /**\n   * Upgrades a specific list of elements rather than all in the DOM.\n   *\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n   * The elements we wish to upgrade.\n   */\n  upgradeElements: function(elements) {},\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  upgradeAllRegistered: function() {},\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   *\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function(!HTMLElement)} callback The function to call upon an\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\n   * got upgraded.\n   */\n  registerUpgradedCallback: function(jsClass, callback) {},\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   *\n   * @param {componentHandler.ComponentConfigPublic} config the registration configuration\n   */\n  register: function(config) {},\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {!Node|!Array<!Node>|!NodeList} nodes\n   */\n  downgradeElements: function(nodes) {}\n};\n\ncomponentHandler = (function() {\n  'use strict';\n\n  /** @type {!Array<componentHandler.ComponentConfig>} */\n  var registeredComponents_ = [];\n\n  /** @type {!Array<componentHandler.Component>} */\n  var createdComponents_ = [];\n\n  var componentConfigProperty_ = 'mdlComponentConfigInternal_';\n\n  /**\n   * Searches registered components for a class we are interested in using.\n   * Optionally replaces a match with passed object if specified.\n   *\n   * @param {string} name The name of a class we want to use.\n   * @param {componentHandler.ComponentConfig=} optReplace Optional object to replace match with.\n   * @return {!Object|boolean}\n   * @private\n   */\n  function findRegisteredClass_(name, optReplace) {\n    for (var i = 0; i < registeredComponents_.length; i++) {\n      if (registeredComponents_[i].className === name) {\n        if (typeof optReplace !== 'undefined') {\n          registeredComponents_[i] = optReplace;\n        }\n        return registeredComponents_[i];\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns an array of the classNames of the upgraded classes on the element.\n   *\n   * @param {!Element} element The element to fetch data from.\n   * @return {!Array<string>}\n   * @private\n   */\n  function getUpgradedListOfElement_(element) {\n    var dataUpgraded = element.getAttribute('data-upgraded');\n    // Use `['']` as default value to conform the `,name,name...` style.\n    return dataUpgraded === null ? [''] : dataUpgraded.split(',');\n  }\n\n  /**\n   * Returns true if the given element has already been upgraded for the given\n   * class.\n   *\n   * @param {!Element} element The element we want to check.\n   * @param {string} jsClass The class to check for.\n   * @returns {boolean}\n   * @private\n   */\n  function isElementUpgraded_(element, jsClass) {\n    var upgradedList = getUpgradedListOfElement_(element);\n    return upgradedList.indexOf(jsClass) !== -1;\n  }\n\n  /**\n   * Create an event object.\n   *\n   * @param {string} eventType The type name of the event.\n   * @param {boolean} bubbles Whether the event should bubble up the DOM.\n   * @param {boolean} cancelable Whether the event can be canceled.\n   * @returns {!Event}\n   */\n  function createEvent_(eventType, bubbles, cancelable) {\n    if ('CustomEvent' in window && typeof window.CustomEvent === 'function') {\n      return new CustomEvent(eventType, {\n        bubbles: bubbles,\n        cancelable: cancelable\n      });\n    } else {\n      var ev = document.createEvent('Events');\n      ev.initEvent(eventType, bubbles, cancelable);\n      return ev;\n    }\n  }\n\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   *\n   * @param {string=} optJsClass the programatic name of the element class we\n   * need to create a new instance of.\n   * @param {string=} optCssClass the name of the CSS class elements of this\n   * type will have.\n   */\n  function upgradeDomInternal(optJsClass, optCssClass) {\n    if (typeof optJsClass === 'undefined' &&\n        typeof optCssClass === 'undefined') {\n      for (var i = 0; i < registeredComponents_.length; i++) {\n        upgradeDomInternal(registeredComponents_[i].className,\n            registeredComponents_[i].cssClass);\n      }\n    } else {\n      var jsClass = /** @type {string} */ (optJsClass);\n      if (typeof optCssClass === 'undefined') {\n        var registeredClass = findRegisteredClass_(jsClass);\n        if (registeredClass) {\n          optCssClass = registeredClass.cssClass;\n        }\n      }\n\n      var elements = document.querySelectorAll('.' + optCssClass);\n      for (var n = 0; n < elements.length; n++) {\n        upgradeElementInternal(elements[n], jsClass);\n      }\n    }\n  }\n\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   *\n   * @param {!Element} element The element we wish to upgrade.\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\n   * the element to.\n   */\n  function upgradeElementInternal(element, optJsClass) {\n    // Verify argument type.\n    if (!(typeof element === 'object' && element instanceof Element)) {\n      throw new Error('Invalid argument provided to upgrade MDL element.');\n    }\n    // Allow upgrade to be canceled by canceling emitted event.\n    var upgradingEv = createEvent_('mdl-componentupgrading', true, true);\n    element.dispatchEvent(upgradingEv);\n    if (upgradingEv.defaultPrevented) {\n      return;\n    }\n\n    var upgradedList = getUpgradedListOfElement_(element);\n    var classesToUpgrade = [];\n    // If jsClass is not provided scan the registered components to find the\n    // ones matching the element's CSS classList.\n    if (!optJsClass) {\n      var classList = element.classList;\n      registeredComponents_.forEach(function(component) {\n        // Match CSS & Not to be upgraded & Not upgraded.\n        if (classList.contains(component.cssClass) &&\n            classesToUpgrade.indexOf(component) === -1 &&\n            !isElementUpgraded_(element, component.className)) {\n          classesToUpgrade.push(component);\n        }\n      });\n    } else if (!isElementUpgraded_(element, optJsClass)) {\n      classesToUpgrade.push(findRegisteredClass_(optJsClass));\n    }\n\n    // Upgrade the element for each classes.\n    for (var i = 0, n = classesToUpgrade.length, registeredClass; i < n; i++) {\n      registeredClass = classesToUpgrade[i];\n      if (registeredClass) {\n        // Mark element as upgraded.\n        upgradedList.push(registeredClass.className);\n        element.setAttribute('data-upgraded', upgradedList.join(','));\n        var instance = new registeredClass.classConstructor(element);\n        instance[componentConfigProperty_] = registeredClass;\n        createdComponents_.push(instance);\n        // Call any callbacks the user has registered with this component type.\n        for (var j = 0, m = registeredClass.callbacks.length; j < m; j++) {\n          registeredClass.callbacks[j](element);\n        }\n\n        if (registeredClass.widget) {\n          // Assign per element instance for control over API\n          element[registeredClass.className] = instance;\n        }\n      } else {\n        throw new Error(\n          'Unable to find a registered component for the given class.');\n      }\n\n      var upgradedEv = createEvent_('mdl-componentupgraded', true, false);\n      element.dispatchEvent(upgradedEv);\n    }\n  }\n\n  /**\n   * Upgrades a specific list of elements rather than all in the DOM.\n   *\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n   * The elements we wish to upgrade.\n   */\n  function upgradeElementsInternal(elements) {\n    if (!Array.isArray(elements)) {\n      if (elements instanceof Element) {\n        elements = [elements];\n      } else {\n        elements = Array.prototype.slice.call(elements);\n      }\n    }\n    for (var i = 0, n = elements.length, element; i < n; i++) {\n      element = elements[i];\n      if (element instanceof HTMLElement) {\n        upgradeElementInternal(element);\n        if (element.children.length > 0) {\n          upgradeElementsInternal(element.children);\n        }\n      }\n    }\n  }\n\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   *\n   * @param {componentHandler.ComponentConfigPublic} config\n   */\n  function registerInternal(config) {\n    // In order to support both Closure-compiled and uncompiled code accessing\n    // this method, we need to allow for both the dot and array syntax for\n    // property access. You'll therefore see the `foo.bar || foo['bar']`\n    // pattern repeated across this method.\n    var widgetMissing = (typeof config.widget === 'undefined' &&\n        typeof config['widget'] === 'undefined');\n    var widget = true;\n\n    if (!widgetMissing) {\n      widget = config.widget || config['widget'];\n    }\n\n    var newConfig = /** @type {componentHandler.ComponentConfig} */ ({\n      classConstructor: config.constructor || config['constructor'],\n      className: config.classAsString || config['classAsString'],\n      cssClass: config.cssClass || config['cssClass'],\n      widget: widget,\n      callbacks: []\n    });\n\n    registeredComponents_.forEach(function(item) {\n      if (item.cssClass === newConfig.cssClass) {\n        throw new Error('The provided cssClass has already been registered: ' + item.cssClass);\n      }\n      if (item.className === newConfig.className) {\n        throw new Error('The provided className has already been registered');\n      }\n    });\n\n    if (config.constructor.prototype\n        .hasOwnProperty(componentConfigProperty_)) {\n      throw new Error(\n          'MDL component classes must not have ' + componentConfigProperty_ +\n          ' defined as a property.');\n    }\n\n    var found = findRegisteredClass_(config.classAsString, newConfig);\n\n    if (!found) {\n      registeredComponents_.push(newConfig);\n    }\n  }\n\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   *\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function(!HTMLElement)} callback The function to call upon an\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\n   * got upgraded.\n   */\n  function registerUpgradedCallbackInternal(jsClass, callback) {\n    var regClass = findRegisteredClass_(jsClass);\n    if (regClass) {\n      regClass.callbacks.push(callback);\n    }\n  }\n\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  function upgradeAllRegisteredInternal() {\n    for (var n = 0; n < registeredComponents_.length; n++) {\n      upgradeDomInternal(registeredComponents_[n].className);\n    }\n  }\n\n  /**\n   * Check the component for the downgrade method.\n   * Execute if found.\n   * Remove component from createdComponents list.\n   *\n   * @param {?componentHandler.Component} component\n   */\n  function deconstructComponentInternal(component) {\n    if (component) {\n      var componentIndex = createdComponents_.indexOf(component);\n      createdComponents_.splice(componentIndex, 1);\n\n      var upgrades = component.element_.getAttribute('data-upgraded').split(',');\n      var componentPlace = upgrades.indexOf(component[componentConfigProperty_].classAsString);\n      upgrades.splice(componentPlace, 1);\n      component.element_.setAttribute('data-upgraded', upgrades.join(','));\n\n      var ev = createEvent_('mdl-componentdowngraded', true, false);\n      component.element_.dispatchEvent(ev);\n    }\n  }\n\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {!Node|!Array<!Node>|!NodeList} nodes\n   */\n  function downgradeNodesInternal(nodes) {\n    /**\n     * Auxiliary function to downgrade a single node.\n     * @param  {!Node} node the node to be downgraded\n     */\n    var downgradeNode = function(node) {\n      createdComponents_.filter(function(item) {\n        return item.element_ === node;\n      }).forEach(deconstructComponentInternal);\n    };\n    if (nodes instanceof Array || nodes instanceof NodeList) {\n      for (var n = 0; n < nodes.length; n++) {\n        downgradeNode(nodes[n]);\n      }\n    } else if (nodes instanceof Node) {\n      downgradeNode(nodes);\n    } else {\n      throw new Error('Invalid argument provided to downgrade MDL nodes.');\n    }\n  }\n\n  // Now return the functions that should be made public with their publicly\n  // facing names...\n  return {\n    upgradeDom: upgradeDomInternal,\n    upgradeElement: upgradeElementInternal,\n    upgradeElements: upgradeElementsInternal,\n    upgradeAllRegistered: upgradeAllRegisteredInternal,\n    registerUpgradedCallback: registerUpgradedCallbackInternal,\n    register: registerInternal,\n    downgradeElements: downgradeNodesInternal\n  };\n})();\n\n/**\n * Describes the type of a registered component type managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   constructor: Function,\n *   classAsString: string,\n *   cssClass: string,\n *   widget: (string|boolean|undefined)\n * }}\n */\ncomponentHandler.ComponentConfigPublic;  // jshint ignore:line\n\n/**\n * Describes the type of a registered component type managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   constructor: !Function,\n *   className: string,\n *   cssClass: string,\n *   widget: (string|boolean),\n *   callbacks: !Array<function(!HTMLElement)>\n * }}\n */\ncomponentHandler.ComponentConfig;  // jshint ignore:line\n\n/**\n * Created component (i.e., upgraded element) type as managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   element_: !HTMLElement,\n *   className: string,\n *   classAsString: string,\n *   cssClass: string,\n *   widget: string\n * }}\n */\ncomponentHandler.Component;  // jshint ignore:line\n\n// Export all symbols, for the benefit of Closure compiler.\n// No effect on uncompiled code.\ncomponentHandler['upgradeDom'] = componentHandler.upgradeDom;\ncomponentHandler['upgradeElement'] = componentHandler.upgradeElement;\ncomponentHandler['upgradeElements'] = componentHandler.upgradeElements;\ncomponentHandler['upgradeAllRegistered'] =\n    componentHandler.upgradeAllRegistered;\ncomponentHandler['registerUpgradedCallback'] =\n    componentHandler.registerUpgradedCallback;\ncomponentHandler['register'] = componentHandler.register;\ncomponentHandler['downgradeElements'] = componentHandler.downgradeElements;\nwindow.componentHandler = componentHandler;\nwindow['componentHandler'] = componentHandler;\n\nwindow.addEventListener('load', function() {\n  'use strict';\n\n  /**\n   * Performs a \"Cutting the mustard\" test. If the browser supports the features\n   * tested, adds a mdl-js class to the <html> element. It then upgrades all MDL\n   * components requiring JavaScript.\n   */\n  if ('classList' in document.createElement('div') &&\n      'querySelector' in document &&\n      'addEventListener' in window && Array.prototype.forEach) {\n    document.documentElement.classList.add('mdl-js');\n    componentHandler.upgradeAllRegistered();\n  } else {\n    /**\n     * Dummy function to avoid JS errors.\n     */\n    componentHandler.upgradeElement = function() {};\n    /**\n     * Dummy function to avoid JS errors.\n     */\n    componentHandler.register = function() {};\n  }\n});\n","// Source: https://github.com/darius/requestAnimationFrame/blob/master/requestAnimationFrame.js\n// Adapted from https://gist.github.com/paulirish/1579671 which derived from\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n// requestAnimationFrame polyfill by Erik Möller.\n// Fixes from Paul Irish, Tino Zijdel, Andrew Mao, Klemen Slavič, Darius Bacon\n// MIT license\nif (!Date.now) {\n    /**\n     * Date.now polyfill.\n     * @return {number} the current Date\n     */\n    Date.now = function () {\n        return new Date().getTime();\n    };\n    Date['now'] = Date.now;\n}\nvar vendors = [\n    'webkit',\n    'moz'\n];\nfor (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n    var vp = vendors[i];\n    window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];\n    window.cancelAnimationFrame = window[vp + 'CancelAnimationFrame'] || window[vp + 'CancelRequestAnimationFrame'];\n    window['requestAnimationFrame'] = window.requestAnimationFrame;\n    window['cancelAnimationFrame'] = window.cancelAnimationFrame;\n}\nif (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n    var lastTime = 0;\n    /**\n     * requestAnimationFrame polyfill.\n     * @param  {!Function} callback the callback function.\n     */\n    window.requestAnimationFrame = function (callback) {\n        var now = Date.now();\n        var nextTime = Math.max(lastTime + 16, now);\n        return setTimeout(function () {\n            callback(lastTime = nextTime);\n        }, nextTime - now);\n    };\n    window.cancelAnimationFrame = clearTimeout;\n    window['requestAnimationFrame'] = window.requestAnimationFrame;\n    window['cancelAnimationFrame'] = window.cancelAnimationFrame;\n}","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Button MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialButton = function MaterialButton(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialButton'] = MaterialButton;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialButton.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialButton.prototype.CssClasses_ = {\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-button__ripple-container',\n    RIPPLE: 'mdl-ripple'\n};\n/**\n   * Handle blur of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialButton.prototype.blurHandler_ = function (event) {\n    if (event) {\n        this.element_.blur();\n    }\n};\n// Public methods.\n/**\n   * Disable button.\n   *\n   * @public\n   */\nMaterialButton.prototype.disable = function () {\n    this.element_.disabled = true;\n};\nMaterialButton.prototype['disable'] = MaterialButton.prototype.disable;\n/**\n   * Enable button.\n   *\n   * @public\n   */\nMaterialButton.prototype.enable = function () {\n    this.element_.disabled = false;\n};\nMaterialButton.prototype['enable'] = MaterialButton.prototype.enable;\n/**\n   * Initialize element.\n   */\nMaterialButton.prototype.init = function () {\n    if (this.element_) {\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            var rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleElement_ = document.createElement('span');\n            this.rippleElement_.classList.add(this.CssClasses_.RIPPLE);\n            rippleContainer.appendChild(this.rippleElement_);\n            this.boundRippleBlurHandler = this.blurHandler_.bind(this);\n            this.rippleElement_.addEventListener('mouseup', this.boundRippleBlurHandler);\n            this.element_.appendChild(rippleContainer);\n        }\n        this.boundButtonBlurHandler = this.blurHandler_.bind(this);\n        this.element_.addEventListener('mouseup', this.boundButtonBlurHandler);\n        this.element_.addEventListener('mouseleave', this.boundButtonBlurHandler);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialButton,\n    classAsString: 'MaterialButton',\n    cssClass: 'mdl-js-button',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Checkbox MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialCheckbox = function MaterialCheckbox(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialCheckbox'] = MaterialCheckbox;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialCheckbox.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialCheckbox.prototype.CssClasses_ = {\n    INPUT: 'mdl-checkbox__input',\n    BOX_OUTLINE: 'mdl-checkbox__box-outline',\n    FOCUS_HELPER: 'mdl-checkbox__focus-helper',\n    TICK_OUTLINE: 'mdl-checkbox__tick-outline',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-checkbox__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onChange_ = function (event) {\n    this.updateClasses_();\n};\n/**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onMouseUp_ = function (event) {\n    this.blur_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialCheckbox.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialCheckbox.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.inputElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the inputs toggle state and update display.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialCheckbox.prototype['checkToggleState'] = MaterialCheckbox.prototype.checkToggleState;\n/**\n   * Check the inputs disabled state and update display.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialCheckbox.prototype['checkDisabled'] = MaterialCheckbox.prototype.checkDisabled;\n/**\n   * Disable checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['disable'] = MaterialCheckbox.prototype.disable;\n/**\n   * Enable checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['enable'] = MaterialCheckbox.prototype.enable;\n/**\n   * Check checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.check = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['check'] = MaterialCheckbox.prototype.check;\n/**\n   * Uncheck checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.uncheck = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['uncheck'] = MaterialCheckbox.prototype.uncheck;\n/**\n   * Initialize element.\n   */\nMaterialCheckbox.prototype.init = function () {\n    if (this.element_) {\n        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        var boxOutline = document.createElement('span');\n        boxOutline.classList.add(this.CssClasses_.BOX_OUTLINE);\n        var tickContainer = document.createElement('span');\n        tickContainer.classList.add(this.CssClasses_.FOCUS_HELPER);\n        var tickOutline = document.createElement('span');\n        tickOutline.classList.add(this.CssClasses_.TICK_OUTLINE);\n        boxOutline.appendChild(tickOutline);\n        this.element_.appendChild(tickContainer);\n        this.element_.appendChild(boxOutline);\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            this.rippleContainerElement_ = document.createElement('span');\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            this.boundRippleMouseUp = this.onMouseUp_.bind(this);\n            this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            this.rippleContainerElement_.appendChild(ripple);\n            this.element_.appendChild(this.rippleContainerElement_);\n        }\n        this.boundInputOnChange = this.onChange_.bind(this);\n        this.boundInputOnFocus = this.onFocus_.bind(this);\n        this.boundInputOnBlur = this.onBlur_.bind(this);\n        this.boundElementMouseUp = this.onMouseUp_.bind(this);\n        this.inputElement_.addEventListener('change', this.boundInputOnChange);\n        this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\n        this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\n        this.element_.addEventListener('mouseup', this.boundElementMouseUp);\n        this.updateClasses_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialCheckbox,\n    classAsString: 'MaterialCheckbox',\n    cssClass: 'mdl-js-checkbox',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for icon toggle MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialIconToggle = function MaterialIconToggle(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialIconToggle'] = MaterialIconToggle;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialIconToggle.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialIconToggle.prototype.CssClasses_ = {\n    INPUT: 'mdl-icon-toggle__input',\n    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-icon-toggle__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onChange_ = function (event) {\n    this.updateClasses_();\n};\n/**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onMouseUp_ = function (event) {\n    this.blur_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialIconToggle.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialIconToggle.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.inputElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the inputs toggle state and update display.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialIconToggle.prototype['checkToggleState'] = MaterialIconToggle.prototype.checkToggleState;\n/**\n   * Check the inputs disabled state and update display.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialIconToggle.prototype['checkDisabled'] = MaterialIconToggle.prototype.checkDisabled;\n/**\n   * Disable icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['disable'] = MaterialIconToggle.prototype.disable;\n/**\n   * Enable icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['enable'] = MaterialIconToggle.prototype.enable;\n/**\n   * Check icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.check = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['check'] = MaterialIconToggle.prototype.check;\n/**\n   * Uncheck icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.uncheck = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['uncheck'] = MaterialIconToggle.prototype.uncheck;\n/**\n   * Initialize element.\n   */\nMaterialIconToggle.prototype.init = function () {\n    if (this.element_) {\n        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        if (this.element_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            this.rippleContainerElement_ = document.createElement('span');\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.JS_RIPPLE_EFFECT);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            this.boundRippleMouseUp = this.onMouseUp_.bind(this);\n            this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            this.rippleContainerElement_.appendChild(ripple);\n            this.element_.appendChild(this.rippleContainerElement_);\n        }\n        this.boundInputOnChange = this.onChange_.bind(this);\n        this.boundInputOnFocus = this.onFocus_.bind(this);\n        this.boundInputOnBlur = this.onBlur_.bind(this);\n        this.boundElementOnMouseUp = this.onMouseUp_.bind(this);\n        this.inputElement_.addEventListener('change', this.boundInputOnChange);\n        this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\n        this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\n        this.element_.addEventListener('mouseup', this.boundElementOnMouseUp);\n        this.updateClasses_();\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialIconToggle,\n    classAsString: 'MaterialIconToggle',\n    cssClass: 'mdl-js-icon-toggle',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for dropdown MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialMenu = function MaterialMenu(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialMenu'] = MaterialMenu;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialMenu.prototype.Constant_ = {\n    // Total duration of the menu animation.\n    TRANSITION_DURATION_SECONDS: 0.3,\n    // The fraction of the total duration we want to use for menu item animations.\n    TRANSITION_DURATION_FRACTION: 0.8,\n    // How long the menu stays open after choosing an option (so the user can see\n    // the ripple).\n    CLOSE_TIMEOUT: 150\n};\n/**\n   * Keycodes, for code readability.\n   *\n   * @enum {number}\n   * @private\n   */\nMaterialMenu.prototype.Keycodes_ = {\n    ENTER: 13,\n    ESCAPE: 27,\n    SPACE: 32,\n    UP_ARROW: 38,\n    DOWN_ARROW: 40\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialMenu.prototype.CssClasses_ = {\n    CONTAINER: 'mdl-menu__container',\n    OUTLINE: 'mdl-menu__outline',\n    ITEM: 'mdl-menu__item',\n    ITEM_RIPPLE_CONTAINER: 'mdl-menu__item-ripple-container',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE: 'mdl-ripple',\n    // Statuses\n    IS_UPGRADED: 'is-upgraded',\n    IS_VISIBLE: 'is-visible',\n    IS_ANIMATING: 'is-animating',\n    // Alignment options\n    BOTTOM_LEFT: 'mdl-menu--bottom-left',\n    // This is the default.\n    BOTTOM_RIGHT: 'mdl-menu--bottom-right',\n    TOP_LEFT: 'mdl-menu--top-left',\n    TOP_RIGHT: 'mdl-menu--top-right',\n    UNALIGNED: 'mdl-menu--unaligned'\n};\n/**\n   * Initialize element.\n   */\nMaterialMenu.prototype.init = function () {\n    if (this.element_) {\n        // Create container for the menu.\n        var container = document.createElement('div');\n        container.classList.add(this.CssClasses_.CONTAINER);\n        this.element_.parentElement.insertBefore(container, this.element_);\n        this.element_.parentElement.removeChild(this.element_);\n        container.appendChild(this.element_);\n        this.container_ = container;\n        // Create outline for the menu (shadow and background).\n        var outline = document.createElement('div');\n        outline.classList.add(this.CssClasses_.OUTLINE);\n        this.outline_ = outline;\n        container.insertBefore(outline, this.element_);\n        // Find the \"for\" element and bind events to it.\n        var forElId = this.element_.getAttribute('for') || this.element_.getAttribute('data-mdl-for');\n        var forEl = null;\n        if (forElId) {\n            forEl = document.getElementById(forElId);\n            if (forEl) {\n                this.forElement_ = forEl;\n                forEl.addEventListener('click', this.handleForClick_.bind(this));\n                forEl.addEventListener('keydown', this.handleForKeyboardEvent_.bind(this));\n            }\n        }\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n        this.boundItemKeydown_ = this.handleItemKeyboardEvent_.bind(this);\n        this.boundItemClick_ = this.handleItemClick_.bind(this);\n        for (var i = 0; i < items.length; i++) {\n            // Add a listener to each menu item.\n            items[i].addEventListener('click', this.boundItemClick_);\n            // Add a tab index to each menu item.\n            items[i].tabIndex = '-1';\n            // Add a keyboard listener to each menu item.\n            items[i].addEventListener('keydown', this.boundItemKeydown_);\n        }\n        // Add ripple classes to each item, if the user has enabled ripples.\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            for (i = 0; i < items.length; i++) {\n                var item = items[i];\n                var rippleContainer = document.createElement('span');\n                rippleContainer.classList.add(this.CssClasses_.ITEM_RIPPLE_CONTAINER);\n                var ripple = document.createElement('span');\n                ripple.classList.add(this.CssClasses_.RIPPLE);\n                rippleContainer.appendChild(ripple);\n                item.appendChild(rippleContainer);\n                item.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            }\n        }\n        // Copy alignment classes to the container, so the outline can use them.\n        if (this.element_.classList.contains(this.CssClasses_.BOTTOM_LEFT)) {\n            this.outline_.classList.add(this.CssClasses_.BOTTOM_LEFT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n            this.outline_.classList.add(this.CssClasses_.BOTTOM_RIGHT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n            this.outline_.classList.add(this.CssClasses_.TOP_LEFT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n            this.outline_.classList.add(this.CssClasses_.TOP_RIGHT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n            this.outline_.classList.add(this.CssClasses_.UNALIGNED);\n        }\n        container.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n/**\n   * Handles a click on the \"for\" element, by positioning the menu and then\n   * toggling it.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleForClick_ = function (evt) {\n    if (this.element_ && this.forElement_) {\n        var rect = this.forElement_.getBoundingClientRect();\n        var forRect = this.forElement_.parentElement.getBoundingClientRect();\n        if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n        } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n            // Position below the \"for\" element, aligned to its right.\n            this.container_.style.right = forRect.right - rect.right + 'px';\n            this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n        } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n            // Position above the \"for\" element, aligned to its left.\n            this.container_.style.left = this.forElement_.offsetLeft + 'px';\n            this.container_.style.bottom = forRect.bottom - rect.top + 'px';\n        } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n            // Position above the \"for\" element, aligned to its right.\n            this.container_.style.right = forRect.right - rect.right + 'px';\n            this.container_.style.bottom = forRect.bottom - rect.top + 'px';\n        } else {\n            // Default: position below the \"for\" element, aligned to its left.\n            this.container_.style.left = this.forElement_.offsetLeft + 'px';\n            this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n        }\n    }\n    this.toggle(evt);\n};\n/**\n   * Handles a keyboard event on the \"for\" element.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleForKeyboardEvent_ = function (evt) {\n    if (this.element_ && this.container_ && this.forElement_) {\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM + ':not([disabled])');\n        if (items && items.length > 0 && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n            if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n                evt.preventDefault();\n                items[items.length - 1].focus();\n            } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n                evt.preventDefault();\n                items[0].focus();\n            }\n        }\n    }\n};\n/**\n   * Handles a keyboard event on an item.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleItemKeyboardEvent_ = function (evt) {\n    if (this.element_ && this.container_) {\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM + ':not([disabled])');\n        if (items && items.length > 0 && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n            var currentIndex = Array.prototype.slice.call(items).indexOf(evt.target);\n            if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n                evt.preventDefault();\n                if (currentIndex > 0) {\n                    items[currentIndex - 1].focus();\n                } else {\n                    items[items.length - 1].focus();\n                }\n            } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n                evt.preventDefault();\n                if (items.length > currentIndex + 1) {\n                    items[currentIndex + 1].focus();\n                } else {\n                    items[0].focus();\n                }\n            } else if (evt.keyCode === this.Keycodes_.SPACE || evt.keyCode === this.Keycodes_.ENTER) {\n                evt.preventDefault();\n                // Send mousedown and mouseup to trigger ripple.\n                var e = new MouseEvent('mousedown');\n                evt.target.dispatchEvent(e);\n                e = new MouseEvent('mouseup');\n                evt.target.dispatchEvent(e);\n                // Send click.\n                evt.target.click();\n            } else if (evt.keyCode === this.Keycodes_.ESCAPE) {\n                evt.preventDefault();\n                this.hide();\n            }\n        }\n    }\n};\n/**\n   * Handles a click event on an item.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleItemClick_ = function (evt) {\n    if (evt.target.hasAttribute('disabled')) {\n        evt.stopPropagation();\n    } else {\n        // Wait some time before closing menu, so the user can see the ripple.\n        this.closing_ = true;\n        window.setTimeout(function (evt) {\n            this.hide();\n            this.closing_ = false;\n        }.bind(this), this.Constant_.CLOSE_TIMEOUT);\n    }\n};\n/**\n   * Calculates the initial clip (for opening the menu) or final clip (for closing\n   * it), and applies it. This allows us to animate from or to the correct point,\n   * that is, the point it's aligned to in the \"for\" element.\n   *\n   * @param {number} height Height of the clip rectangle\n   * @param {number} width Width of the clip rectangle\n   * @private\n   */\nMaterialMenu.prototype.applyClip_ = function (height, width) {\n    if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n        // Do not clip.\n        this.element_.style.clip = '';\n    } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n        // Clip to the top right corner of the menu.\n        this.element_.style.clip = 'rect(0 ' + width + 'px ' + '0 ' + width + 'px)';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n        // Clip to the bottom left corner of the menu.\n        this.element_.style.clip = 'rect(' + height + 'px 0 ' + height + 'px 0)';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n        // Clip to the bottom right corner of the menu.\n        this.element_.style.clip = 'rect(' + height + 'px ' + width + 'px ' + height + 'px ' + width + 'px)';\n    } else {\n        // Default: do not clip (same as clipping to the top left corner).\n        this.element_.style.clip = '';\n    }\n};\n/**\n   * Cleanup function to remove animation listeners.\n   *\n   * @param {Event} evt\n   * @private\n   */\nMaterialMenu.prototype.removeAnimationEndListener_ = function (evt) {\n    evt.target.classList.remove(MaterialMenu.prototype.CssClasses_.IS_ANIMATING);\n};\n/**\n   * Adds an event listener to clean up after the animation ends.\n   *\n   * @private\n   */\nMaterialMenu.prototype.addAnimationEndListener_ = function () {\n    this.element_.addEventListener('transitionend', this.removeAnimationEndListener_);\n    this.element_.addEventListener('webkitTransitionEnd', this.removeAnimationEndListener_);\n};\n/**\n   * Displays the menu.\n   *\n   * @public\n   */\nMaterialMenu.prototype.show = function (evt) {\n    if (this.element_ && this.container_ && this.outline_) {\n        // Measure the inner element.\n        var height = this.element_.getBoundingClientRect().height;\n        var width = this.element_.getBoundingClientRect().width;\n        // Apply the inner element's size to the container and outline.\n        this.container_.style.width = width + 'px';\n        this.container_.style.height = height + 'px';\n        this.outline_.style.width = width + 'px';\n        this.outline_.style.height = height + 'px';\n        var transitionDuration = this.Constant_.TRANSITION_DURATION_SECONDS * this.Constant_.TRANSITION_DURATION_FRACTION;\n        // Calculate transition delays for individual menu items, so that they fade\n        // in one at a time.\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n        for (var i = 0; i < items.length; i++) {\n            var itemDelay = null;\n            if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT) || this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n                itemDelay = (height - items[i].offsetTop - items[i].offsetHeight) / height * transitionDuration + 's';\n            } else {\n                itemDelay = items[i].offsetTop / height * transitionDuration + 's';\n            }\n            items[i].style.transitionDelay = itemDelay;\n        }\n        // Apply the initial clip to the text before we start animating.\n        this.applyClip_(height, width);\n        // Wait for the next frame, turn on animation, and apply the final clip.\n        // Also make it visible. This triggers the transitions.\n        window.requestAnimationFrame(function () {\n            this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n            this.element_.style.clip = 'rect(0 ' + width + 'px ' + height + 'px 0)';\n            this.container_.classList.add(this.CssClasses_.IS_VISIBLE);\n        }.bind(this));\n        // Clean up after the animation is complete.\n        this.addAnimationEndListener_();\n        // Add a click listener to the document, to close the menu.\n        var callback = function (e) {\n            // Check to see if the document is processing the same event that\n            // displayed the menu in the first place. If so, do nothing.\n            // Also check to see if the menu is in the process of closing itself, and\n            // do nothing in that case.\n            // Also check if the clicked element is a menu item\n            // if so, do nothing.\n            if (e !== evt && !this.closing_ && e.target.parentNode !== this.element_) {\n                document.removeEventListener('click', callback);\n                this.hide();\n            }\n        }.bind(this);\n        document.addEventListener('click', callback);\n    }\n};\nMaterialMenu.prototype['show'] = MaterialMenu.prototype.show;\n/**\n   * Hides the menu.\n   *\n   * @public\n   */\nMaterialMenu.prototype.hide = function () {\n    if (this.element_ && this.container_ && this.outline_) {\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n        // Remove all transition delays; menu items fade out concurrently.\n        for (var i = 0; i < items.length; i++) {\n            items[i].style.removeProperty('transition-delay');\n        }\n        // Measure the inner element.\n        var rect = this.element_.getBoundingClientRect();\n        var height = rect.height;\n        var width = rect.width;\n        // Turn on animation, and apply the final clip. Also make invisible.\n        // This triggers the transitions.\n        this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n        this.applyClip_(height, width);\n        this.container_.classList.remove(this.CssClasses_.IS_VISIBLE);\n        // Clean up after the animation is complete.\n        this.addAnimationEndListener_();\n    }\n};\nMaterialMenu.prototype['hide'] = MaterialMenu.prototype.hide;\n/**\n   * Displays or hides the menu, depending on current state.\n   *\n   * @public\n   */\nMaterialMenu.prototype.toggle = function (evt) {\n    if (this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n        this.hide();\n    } else {\n        this.show(evt);\n    }\n};\nMaterialMenu.prototype['toggle'] = MaterialMenu.prototype.toggle;\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialMenu,\n    classAsString: 'MaterialMenu',\n    cssClass: 'mdl-js-menu',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Progress MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialProgress = function MaterialProgress(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialProgress'] = MaterialProgress;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialProgress.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialProgress.prototype.CssClasses_ = { INDETERMINATE_CLASS: 'mdl-progress__indeterminate' };\n/**\n   * Set the current progress of the progressbar.\n   *\n   * @param {number} p Percentage of the progress (0-100)\n   * @public\n   */\nMaterialProgress.prototype.setProgress = function (p) {\n    if (this.element_.classList.contains(this.CssClasses_.INDETERMINATE_CLASS)) {\n        return;\n    }\n    this.progressbar_.style.width = p + '%';\n};\nMaterialProgress.prototype['setProgress'] = MaterialProgress.prototype.setProgress;\n/**\n   * Set the current progress of the buffer.\n   *\n   * @param {number} p Percentage of the buffer (0-100)\n   * @public\n   */\nMaterialProgress.prototype.setBuffer = function (p) {\n    this.bufferbar_.style.width = p + '%';\n    this.auxbar_.style.width = 100 - p + '%';\n};\nMaterialProgress.prototype['setBuffer'] = MaterialProgress.prototype.setBuffer;\n/**\n   * Initialize element.\n   */\nMaterialProgress.prototype.init = function () {\n    if (this.element_) {\n        var el = document.createElement('div');\n        el.className = 'progressbar bar bar1';\n        this.element_.appendChild(el);\n        this.progressbar_ = el;\n        el = document.createElement('div');\n        el.className = 'bufferbar bar bar2';\n        this.element_.appendChild(el);\n        this.bufferbar_ = el;\n        el = document.createElement('div');\n        el.className = 'auxbar bar bar3';\n        this.element_.appendChild(el);\n        this.auxbar_ = el;\n        this.progressbar_.style.width = '0%';\n        this.bufferbar_.style.width = '100%';\n        this.auxbar_.style.width = '0%';\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialProgress,\n    classAsString: 'MaterialProgress',\n    cssClass: 'mdl-js-progress',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Radio MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialRadio = function MaterialRadio(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialRadio'] = MaterialRadio;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialRadio.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialRadio.prototype.CssClasses_ = {\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked',\n    IS_UPGRADED: 'is-upgraded',\n    JS_RADIO: 'mdl-js-radio',\n    RADIO_BTN: 'mdl-radio__button',\n    RADIO_OUTER_CIRCLE: 'mdl-radio__outer-circle',\n    RADIO_INNER_CIRCLE: 'mdl-radio__inner-circle',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-radio__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onChange_ = function (event) {\n    // Since other radio buttons don't get change events, we need to look for\n    // them to update their classes.\n    var radios = document.getElementsByClassName(this.CssClasses_.JS_RADIO);\n    for (var i = 0; i < radios.length; i++) {\n        var button = radios[i].querySelector('.' + this.CssClasses_.RADIO_BTN);\n        // Different name == different group, so no point updating those.\n        if (button.getAttribute('name') === this.btnElement_.getAttribute('name')) {\n            if (typeof radios[i]['MaterialRadio'] !== 'undefined') {\n                radios[i]['MaterialRadio'].updateClasses_();\n            }\n        }\n    }\n};\n/**\n   * Handle focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onMouseup_ = function (event) {\n    this.blur_();\n};\n/**\n   * Update classes.\n   *\n   * @private\n   */\nMaterialRadio.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialRadio.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.btnElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the components disabled state.\n   *\n   * @public\n   */\nMaterialRadio.prototype.checkDisabled = function () {\n    if (this.btnElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialRadio.prototype['checkDisabled'] = MaterialRadio.prototype.checkDisabled;\n/**\n   * Check the components toggled state.\n   *\n   * @public\n   */\nMaterialRadio.prototype.checkToggleState = function () {\n    if (this.btnElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialRadio.prototype['checkToggleState'] = MaterialRadio.prototype.checkToggleState;\n/**\n   * Disable radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.disable = function () {\n    this.btnElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialRadio.prototype['disable'] = MaterialRadio.prototype.disable;\n/**\n   * Enable radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.enable = function () {\n    this.btnElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialRadio.prototype['enable'] = MaterialRadio.prototype.enable;\n/**\n   * Check radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.check = function () {\n    this.btnElement_.checked = true;\n    this.onChange_(null);\n};\nMaterialRadio.prototype['check'] = MaterialRadio.prototype.check;\n/**\n   * Uncheck radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.uncheck = function () {\n    this.btnElement_.checked = false;\n    this.onChange_(null);\n};\nMaterialRadio.prototype['uncheck'] = MaterialRadio.prototype.uncheck;\n/**\n   * Initialize element.\n   */\nMaterialRadio.prototype.init = function () {\n    if (this.element_) {\n        this.btnElement_ = this.element_.querySelector('.' + this.CssClasses_.RADIO_BTN);\n        this.boundChangeHandler_ = this.onChange_.bind(this);\n        this.boundFocusHandler_ = this.onChange_.bind(this);\n        this.boundBlurHandler_ = this.onBlur_.bind(this);\n        this.boundMouseUpHandler_ = this.onMouseup_.bind(this);\n        var outerCircle = document.createElement('span');\n        outerCircle.classList.add(this.CssClasses_.RADIO_OUTER_CIRCLE);\n        var innerCircle = document.createElement('span');\n        innerCircle.classList.add(this.CssClasses_.RADIO_INNER_CIRCLE);\n        this.element_.appendChild(outerCircle);\n        this.element_.appendChild(innerCircle);\n        var rippleContainer;\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            rippleContainer.addEventListener('mouseup', this.boundMouseUpHandler_);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            rippleContainer.appendChild(ripple);\n            this.element_.appendChild(rippleContainer);\n        }\n        this.btnElement_.addEventListener('change', this.boundChangeHandler_);\n        this.btnElement_.addEventListener('focus', this.boundFocusHandler_);\n        this.btnElement_.addEventListener('blur', this.boundBlurHandler_);\n        this.element_.addEventListener('mouseup', this.boundMouseUpHandler_);\n        this.updateClasses_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialRadio,\n    classAsString: 'MaterialRadio',\n    cssClass: 'mdl-js-radio',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Slider MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialSlider = function MaterialSlider(element) {\n    this.element_ = element;\n    // Browser feature detection.\n    this.isIE_ = window.navigator.msPointerEnabled;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialSlider'] = MaterialSlider;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialSlider.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSlider.prototype.CssClasses_ = {\n    IE_CONTAINER: 'mdl-slider__ie-container',\n    SLIDER_CONTAINER: 'mdl-slider__container',\n    BACKGROUND_FLEX: 'mdl-slider__background-flex',\n    BACKGROUND_LOWER: 'mdl-slider__background-lower',\n    BACKGROUND_UPPER: 'mdl-slider__background-upper',\n    IS_LOWEST_VALUE: 'is-lowest-value',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Handle input on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSlider.prototype.onInput_ = function (event) {\n    this.updateValueStyles_();\n};\n/**\n   * Handle change on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSlider.prototype.onChange_ = function (event) {\n    this.updateValueStyles_();\n};\n/**\n   * Handle mouseup on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSlider.prototype.onMouseUp_ = function (event) {\n    event.target.blur();\n};\n/**\n   * Handle mousedown on container element.\n   * This handler is purpose is to not require the use to click\n   * exactly on the 2px slider element, as FireFox seems to be very\n   * strict about this.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   * @suppress {missingProperties}\n   */\nMaterialSlider.prototype.onContainerMouseDown_ = function (event) {\n    // If this click is not on the parent element (but rather some child)\n    // ignore. It may still bubble up.\n    if (event.target !== this.element_.parentElement) {\n        return;\n    }\n    // Discard the original event and create a new event that\n    // is on the slider element.\n    event.preventDefault();\n    var newEvent = new MouseEvent('mousedown', {\n        target: event.target,\n        buttons: event.buttons,\n        clientX: event.clientX,\n        clientY: this.element_.getBoundingClientRect().y\n    });\n    this.element_.dispatchEvent(newEvent);\n};\n/**\n   * Handle updating of values.\n   *\n   * @private\n   */\nMaterialSlider.prototype.updateValueStyles_ = function () {\n    // Calculate and apply percentages to div structure behind slider.\n    var fraction = (this.element_.value - this.element_.min) / (this.element_.max - this.element_.min);\n    if (fraction === 0) {\n        this.element_.classList.add(this.CssClasses_.IS_LOWEST_VALUE);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_LOWEST_VALUE);\n    }\n    if (!this.isIE_) {\n        this.backgroundLower_.style.flex = fraction;\n        this.backgroundLower_.style.webkitFlex = fraction;\n        this.backgroundUpper_.style.flex = 1 - fraction;\n        this.backgroundUpper_.style.webkitFlex = 1 - fraction;\n    }\n};\n// Public methods.\n/**\n   * Disable slider.\n   *\n   * @public\n   */\nMaterialSlider.prototype.disable = function () {\n    this.element_.disabled = true;\n};\nMaterialSlider.prototype['disable'] = MaterialSlider.prototype.disable;\n/**\n   * Enable slider.\n   *\n   * @public\n   */\nMaterialSlider.prototype.enable = function () {\n    this.element_.disabled = false;\n};\nMaterialSlider.prototype['enable'] = MaterialSlider.prototype.enable;\n/**\n   * Update slider value.\n   *\n   * @param {number} value The value to which to set the control (optional).\n   * @public\n   */\nMaterialSlider.prototype.change = function (value) {\n    if (typeof value !== 'undefined') {\n        this.element_.value = value;\n    }\n    this.updateValueStyles_();\n};\nMaterialSlider.prototype['change'] = MaterialSlider.prototype.change;\n/**\n   * Initialize element.\n   */\nMaterialSlider.prototype.init = function () {\n    if (this.element_) {\n        if (this.isIE_) {\n            // Since we need to specify a very large height in IE due to\n            // implementation limitations, we add a parent here that trims it down to\n            // a reasonable size.\n            var containerIE = document.createElement('div');\n            containerIE.classList.add(this.CssClasses_.IE_CONTAINER);\n            this.element_.parentElement.insertBefore(containerIE, this.element_);\n            this.element_.parentElement.removeChild(this.element_);\n            containerIE.appendChild(this.element_);\n        } else {\n            // For non-IE browsers, we need a div structure that sits behind the\n            // slider and allows us to style the left and right sides of it with\n            // different colors.\n            var container = document.createElement('div');\n            container.classList.add(this.CssClasses_.SLIDER_CONTAINER);\n            this.element_.parentElement.insertBefore(container, this.element_);\n            this.element_.parentElement.removeChild(this.element_);\n            container.appendChild(this.element_);\n            var backgroundFlex = document.createElement('div');\n            backgroundFlex.classList.add(this.CssClasses_.BACKGROUND_FLEX);\n            container.appendChild(backgroundFlex);\n            this.backgroundLower_ = document.createElement('div');\n            this.backgroundLower_.classList.add(this.CssClasses_.BACKGROUND_LOWER);\n            backgroundFlex.appendChild(this.backgroundLower_);\n            this.backgroundUpper_ = document.createElement('div');\n            this.backgroundUpper_.classList.add(this.CssClasses_.BACKGROUND_UPPER);\n            backgroundFlex.appendChild(this.backgroundUpper_);\n        }\n        this.boundInputHandler = this.onInput_.bind(this);\n        this.boundChangeHandler = this.onChange_.bind(this);\n        this.boundMouseUpHandler = this.onMouseUp_.bind(this);\n        this.boundContainerMouseDownHandler = this.onContainerMouseDown_.bind(this);\n        this.element_.addEventListener('input', this.boundInputHandler);\n        this.element_.addEventListener('change', this.boundChangeHandler);\n        this.element_.addEventListener('mouseup', this.boundMouseUpHandler);\n        this.element_.parentElement.addEventListener('mousedown', this.boundContainerMouseDownHandler);\n        this.updateValueStyles_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSlider,\n    classAsString: 'MaterialSlider',\n    cssClass: 'mdl-js-slider',\n    widget: true\n});","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Snackbar MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialSnackbar = function MaterialSnackbar(element) {\n    this.element_ = element;\n    this.textElement_ = this.element_.querySelector('.' + this.cssClasses_.MESSAGE);\n    this.actionElement_ = this.element_.querySelector('.' + this.cssClasses_.ACTION);\n    if (!this.textElement_) {\n        throw new Error('There must be a message element for a snackbar.');\n    }\n    if (!this.actionElement_) {\n        throw new Error('There must be an action element for a snackbar.');\n    }\n    this.active = false;\n    this.actionHandler_ = undefined;\n    this.message_ = undefined;\n    this.actionText_ = undefined;\n    this.queuedNotifications_ = [];\n    this.setActionHidden_(true);\n};\nwindow['MaterialSnackbar'] = MaterialSnackbar;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialSnackbar.prototype.Constant_ = {\n    // The duration of the snackbar show/hide animation, in ms.\n    ANIMATION_LENGTH: 250\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSnackbar.prototype.cssClasses_ = {\n    SNACKBAR: 'mdl-snackbar',\n    MESSAGE: 'mdl-snackbar__text',\n    ACTION: 'mdl-snackbar__action',\n    ACTIVE: 'mdl-snackbar--active'\n};\n/**\n   * Display the snackbar.\n   *\n   * @private\n   */\nMaterialSnackbar.prototype.displaySnackbar_ = function () {\n    this.element_.setAttribute('aria-hidden', 'true');\n    if (this.actionHandler_) {\n        this.actionElement_.textContent = this.actionText_;\n        this.actionElement_.addEventListener('click', this.actionHandler_);\n        this.setActionHidden_(false);\n    }\n    this.textElement_.textContent = this.message_;\n    this.element_.classList.add(this.cssClasses_.ACTIVE);\n    this.element_.setAttribute('aria-hidden', 'false');\n    setTimeout(this.cleanup_.bind(this), this.timeout_);\n};\n/**\n   * Show the snackbar.\n   *\n   * @param {Object} data The data for the notification.\n   * @public\n   */\nMaterialSnackbar.prototype.showSnackbar = function (data) {\n    if (data === undefined) {\n        throw new Error('Please provide a data object with at least a message to display.');\n    }\n    if (data['message'] === undefined) {\n        throw new Error('Please provide a message to be displayed.');\n    }\n    if (data['actionHandler'] && !data['actionText']) {\n        throw new Error('Please provide action text with the handler.');\n    }\n    if (this.active) {\n        this.queuedNotifications_.push(data);\n    } else {\n        this.active = true;\n        this.message_ = data['message'];\n        if (data['timeout']) {\n            this.timeout_ = data['timeout'];\n        } else {\n            this.timeout_ = 2750;\n        }\n        if (data['actionHandler']) {\n            this.actionHandler_ = data['actionHandler'];\n        }\n        if (data['actionText']) {\n            this.actionText_ = data['actionText'];\n        }\n        this.displaySnackbar_();\n    }\n};\nMaterialSnackbar.prototype['showSnackbar'] = MaterialSnackbar.prototype.showSnackbar;\n/**\n   * Check if the queue has items within it.\n   * If it does, display the next entry.\n   *\n   * @private\n   */\nMaterialSnackbar.prototype.checkQueue_ = function () {\n    if (this.queuedNotifications_.length > 0) {\n        this.showSnackbar(this.queuedNotifications_.shift());\n    }\n};\n/**\n   * Cleanup the snackbar event listeners and accessiblity attributes.\n   *\n   * @private\n   */\nMaterialSnackbar.prototype.cleanup_ = function () {\n    this.element_.classList.remove(this.cssClasses_.ACTIVE);\n    setTimeout(function () {\n        this.element_.setAttribute('aria-hidden', 'true');\n        this.textElement_.textContent = '';\n        if (!Boolean(this.actionElement_.getAttribute('aria-hidden'))) {\n            this.setActionHidden_(true);\n            this.actionElement_.textContent = '';\n            this.actionElement_.removeEventListener('click', this.actionHandler_);\n        }\n        this.actionHandler_ = undefined;\n        this.message_ = undefined;\n        this.actionText_ = undefined;\n        this.active = false;\n        this.checkQueue_();\n    }.bind(this), this.Constant_.ANIMATION_LENGTH);\n};\n/**\n   * Set the action handler hidden state.\n   *\n   * @param {boolean} value\n   * @private\n   */\nMaterialSnackbar.prototype.setActionHidden_ = function (value) {\n    if (value) {\n        this.actionElement_.setAttribute('aria-hidden', 'true');\n    } else {\n        this.actionElement_.removeAttribute('aria-hidden');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSnackbar,\n    classAsString: 'MaterialSnackbar',\n    cssClass: 'mdl-js-snackbar',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Spinner MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   * @constructor\n   */\nvar MaterialSpinner = function MaterialSpinner(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialSpinner'] = MaterialSpinner;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialSpinner.prototype.Constant_ = { MDL_SPINNER_LAYER_COUNT: 4 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSpinner.prototype.CssClasses_ = {\n    MDL_SPINNER_LAYER: 'mdl-spinner__layer',\n    MDL_SPINNER_CIRCLE_CLIPPER: 'mdl-spinner__circle-clipper',\n    MDL_SPINNER_CIRCLE: 'mdl-spinner__circle',\n    MDL_SPINNER_GAP_PATCH: 'mdl-spinner__gap-patch',\n    MDL_SPINNER_LEFT: 'mdl-spinner__left',\n    MDL_SPINNER_RIGHT: 'mdl-spinner__right'\n};\n/**\n   * Auxiliary method to create a spinner layer.\n   *\n   * @param {number} index Index of the layer to be created.\n   * @public\n   */\nMaterialSpinner.prototype.createLayer = function (index) {\n    var layer = document.createElement('div');\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER);\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER + '-' + index);\n    var leftClipper = document.createElement('div');\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_LEFT);\n    var gapPatch = document.createElement('div');\n    gapPatch.classList.add(this.CssClasses_.MDL_SPINNER_GAP_PATCH);\n    var rightClipper = document.createElement('div');\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_RIGHT);\n    var circleOwners = [\n        leftClipper,\n        gapPatch,\n        rightClipper\n    ];\n    for (var i = 0; i < circleOwners.length; i++) {\n        var circle = document.createElement('div');\n        circle.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE);\n        circleOwners[i].appendChild(circle);\n    }\n    layer.appendChild(leftClipper);\n    layer.appendChild(gapPatch);\n    layer.appendChild(rightClipper);\n    this.element_.appendChild(layer);\n};\nMaterialSpinner.prototype['createLayer'] = MaterialSpinner.prototype.createLayer;\n/**\n   * Stops the spinner animation.\n   * Public method for users who need to stop the spinner for any reason.\n   *\n   * @public\n   */\nMaterialSpinner.prototype.stop = function () {\n    this.element_.classList.remove('is-active');\n};\nMaterialSpinner.prototype['stop'] = MaterialSpinner.prototype.stop;\n/**\n   * Starts the spinner animation.\n   * Public method for users who need to manually start the spinner for any reason\n   * (instead of just adding the 'is-active' class to their markup).\n   *\n   * @public\n   */\nMaterialSpinner.prototype.start = function () {\n    this.element_.classList.add('is-active');\n};\nMaterialSpinner.prototype['start'] = MaterialSpinner.prototype.start;\n/**\n   * Initialize element.\n   */\nMaterialSpinner.prototype.init = function () {\n    if (this.element_) {\n        for (var i = 1; i <= this.Constant_.MDL_SPINNER_LAYER_COUNT; i++) {\n            this.createLayer(i);\n        }\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSpinner,\n    classAsString: 'MaterialSpinner',\n    cssClass: 'mdl-js-spinner',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Checkbox MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialSwitch = function MaterialSwitch(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialSwitch'] = MaterialSwitch;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialSwitch.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSwitch.prototype.CssClasses_ = {\n    INPUT: 'mdl-switch__input',\n    TRACK: 'mdl-switch__track',\n    THUMB: 'mdl-switch__thumb',\n    FOCUS_HELPER: 'mdl-switch__focus-helper',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-switch__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSwitch.prototype.onChange_ = function (event) {\n    this.updateClasses_();\n};\n/**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSwitch.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSwitch.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSwitch.prototype.onMouseUp_ = function (event) {\n    this.blur_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialSwitch.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialSwitch.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.inputElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the components disabled state.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialSwitch.prototype['checkDisabled'] = MaterialSwitch.prototype.checkDisabled;\n/**\n   * Check the components toggled state.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialSwitch.prototype['checkToggleState'] = MaterialSwitch.prototype.checkToggleState;\n/**\n   * Disable switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialSwitch.prototype['disable'] = MaterialSwitch.prototype.disable;\n/**\n   * Enable switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialSwitch.prototype['enable'] = MaterialSwitch.prototype.enable;\n/**\n   * Activate switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.on = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n};\nMaterialSwitch.prototype['on'] = MaterialSwitch.prototype.on;\n/**\n   * Deactivate switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.off = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n};\nMaterialSwitch.prototype['off'] = MaterialSwitch.prototype.off;\n/**\n   * Initialize element.\n   */\nMaterialSwitch.prototype.init = function () {\n    if (this.element_) {\n        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        var track = document.createElement('div');\n        track.classList.add(this.CssClasses_.TRACK);\n        var thumb = document.createElement('div');\n        thumb.classList.add(this.CssClasses_.THUMB);\n        var focusHelper = document.createElement('span');\n        focusHelper.classList.add(this.CssClasses_.FOCUS_HELPER);\n        thumb.appendChild(focusHelper);\n        this.element_.appendChild(track);\n        this.element_.appendChild(thumb);\n        this.boundMouseUpHandler = this.onMouseUp_.bind(this);\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            this.rippleContainerElement_ = document.createElement('span');\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            this.rippleContainerElement_.addEventListener('mouseup', this.boundMouseUpHandler);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            this.rippleContainerElement_.appendChild(ripple);\n            this.element_.appendChild(this.rippleContainerElement_);\n        }\n        this.boundChangeHandler = this.onChange_.bind(this);\n        this.boundFocusHandler = this.onFocus_.bind(this);\n        this.boundBlurHandler = this.onBlur_.bind(this);\n        this.inputElement_.addEventListener('change', this.boundChangeHandler);\n        this.inputElement_.addEventListener('focus', this.boundFocusHandler);\n        this.inputElement_.addEventListener('blur', this.boundBlurHandler);\n        this.element_.addEventListener('mouseup', this.boundMouseUpHandler);\n        this.updateClasses_();\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSwitch,\n    classAsString: 'MaterialSwitch',\n    cssClass: 'mdl-js-switch',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Textfield MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialTextfield = function MaterialTextfield(element) {\n    this.element_ = element;\n    this.maxRows = this.Constant_.NO_MAX_ROWS;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialTextfield'] = MaterialTextfield;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialTextfield.prototype.Constant_ = {\n    NO_MAX_ROWS: -1,\n    MAX_ROWS_ATTRIBUTE: 'maxrows'\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTextfield.prototype.CssClasses_ = {\n    LABEL: 'mdl-textfield__label',\n    INPUT: 'mdl-textfield__input',\n    IS_DIRTY: 'is-dirty',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_INVALID: 'is-invalid',\n    IS_UPGRADED: 'is-upgraded',\n    HAS_PLACEHOLDER: 'has-placeholder'\n};\n/**\n   * Handle input being entered.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onKeyDown_ = function (event) {\n    var currentRowCount = event.target.value.split('\\n').length;\n    if (event.keyCode === 13) {\n        if (currentRowCount >= this.maxRows) {\n            event.preventDefault();\n        }\n    }\n};\n/**\n   * Handle focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle reset event from out side.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onReset_ = function (event) {\n    this.updateClasses_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialTextfield.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkValidity();\n    this.checkDirty();\n    this.checkFocus();\n};\n// Public methods.\n/**\n   * Check the disabled state and update field accordingly.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.checkDisabled = function () {\n    if (this.input_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialTextfield.prototype['checkDisabled'] = MaterialTextfield.prototype.checkDisabled;\n/**\n  * Check the focus state and update field accordingly.\n  *\n  * @public\n  */\nMaterialTextfield.prototype.checkFocus = function () {\n    if (Boolean(this.element_.querySelector(':focus'))) {\n        this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n    }\n};\nMaterialTextfield.prototype['checkFocus'] = MaterialTextfield.prototype.checkFocus;\n/**\n   * Check the validity state and update field accordingly.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.checkValidity = function () {\n    if (this.input_.validity) {\n        if (this.input_.validity.valid) {\n            this.element_.classList.remove(this.CssClasses_.IS_INVALID);\n        } else {\n            this.element_.classList.add(this.CssClasses_.IS_INVALID);\n        }\n    }\n};\nMaterialTextfield.prototype['checkValidity'] = MaterialTextfield.prototype.checkValidity;\n/**\n   * Check the dirty state and update field accordingly.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.checkDirty = function () {\n    if (this.input_.value && this.input_.value.length > 0) {\n        this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DIRTY);\n    }\n};\nMaterialTextfield.prototype['checkDirty'] = MaterialTextfield.prototype.checkDirty;\n/**\n   * Disable text field.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.disable = function () {\n    this.input_.disabled = true;\n    this.updateClasses_();\n};\nMaterialTextfield.prototype['disable'] = MaterialTextfield.prototype.disable;\n/**\n   * Enable text field.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.enable = function () {\n    this.input_.disabled = false;\n    this.updateClasses_();\n};\nMaterialTextfield.prototype['enable'] = MaterialTextfield.prototype.enable;\n/**\n   * Update text field value.\n   *\n   * @param {string} value The value to which to set the control (optional).\n   * @public\n   */\nMaterialTextfield.prototype.change = function (value) {\n    this.input_.value = value || '';\n    this.updateClasses_();\n};\nMaterialTextfield.prototype['change'] = MaterialTextfield.prototype.change;\n/**\n   * Initialize element.\n   */\nMaterialTextfield.prototype.init = function () {\n    if (this.element_) {\n        this.label_ = this.element_.querySelector('.' + this.CssClasses_.LABEL);\n        this.input_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        if (this.input_) {\n            if (this.input_.hasAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE)) {\n                this.maxRows = parseInt(this.input_.getAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE), 10);\n                if (isNaN(this.maxRows)) {\n                    this.maxRows = this.Constant_.NO_MAX_ROWS;\n                }\n            }\n            if (this.input_.hasAttribute('placeholder')) {\n                this.element_.classList.add(this.CssClasses_.HAS_PLACEHOLDER);\n            }\n            this.boundUpdateClassesHandler = this.updateClasses_.bind(this);\n            this.boundFocusHandler = this.onFocus_.bind(this);\n            this.boundBlurHandler = this.onBlur_.bind(this);\n            this.boundResetHandler = this.onReset_.bind(this);\n            this.input_.addEventListener('input', this.boundUpdateClassesHandler);\n            this.input_.addEventListener('focus', this.boundFocusHandler);\n            this.input_.addEventListener('blur', this.boundBlurHandler);\n            this.input_.addEventListener('reset', this.boundResetHandler);\n            if (this.maxRows !== this.Constant_.NO_MAX_ROWS) {\n                // TODO: This should handle pasting multi line text.\n                // Currently doesn't.\n                this.boundKeyDownHandler = this.onKeyDown_.bind(this);\n                this.input_.addEventListener('keydown', this.boundKeyDownHandler);\n            }\n            var invalid = this.element_.classList.contains(this.CssClasses_.IS_INVALID);\n            this.updateClasses_();\n            this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n            if (invalid) {\n                this.element_.classList.add(this.CssClasses_.IS_INVALID);\n            }\n            if (this.input_.hasAttribute('autofocus')) {\n                this.element_.focus();\n                this.checkFocus();\n            }\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialTextfield,\n    classAsString: 'MaterialTextfield',\n    cssClass: 'mdl-js-textfield',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Tooltip MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialTooltip = function MaterialTooltip(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialTooltip'] = MaterialTooltip;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialTooltip.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTooltip.prototype.CssClasses_ = {\n    IS_ACTIVE: 'is-active',\n    BOTTOM: 'mdl-tooltip--bottom',\n    LEFT: 'mdl-tooltip--left',\n    RIGHT: 'mdl-tooltip--right',\n    TOP: 'mdl-tooltip--top'\n};\n/**\n   * Handle mouseenter for tooltip.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTooltip.prototype.handleMouseEnter_ = function (event) {\n    var props = event.target.getBoundingClientRect();\n    var left = props.left + props.width / 2;\n    var top = props.top + props.height / 2;\n    var marginLeft = -1 * (this.element_.offsetWidth / 2);\n    var marginTop = -1 * (this.element_.offsetHeight / 2);\n    if (this.element_.classList.contains(this.CssClasses_.LEFT) || this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n        left = props.width / 2;\n        if (top + marginTop < 0) {\n            this.element_.style.top = '0';\n            this.element_.style.marginTop = '0';\n        } else {\n            this.element_.style.top = top + 'px';\n            this.element_.style.marginTop = marginTop + 'px';\n        }\n    } else {\n        if (left + marginLeft < 0) {\n            this.element_.style.left = '0';\n            this.element_.style.marginLeft = '0';\n        } else {\n            this.element_.style.left = left + 'px';\n            this.element_.style.marginLeft = marginLeft + 'px';\n        }\n    }\n    if (this.element_.classList.contains(this.CssClasses_.TOP)) {\n        this.element_.style.top = props.top - this.element_.offsetHeight - 10 + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n        this.element_.style.left = props.left + props.width + 10 + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.LEFT)) {\n        this.element_.style.left = props.left - this.element_.offsetWidth - 10 + 'px';\n    } else {\n        this.element_.style.top = props.top + props.height + 10 + 'px';\n    }\n    this.element_.classList.add(this.CssClasses_.IS_ACTIVE);\n};\n/**\n   * Hide tooltip on mouseleave or scroll\n   *\n   * @private\n   */\nMaterialTooltip.prototype.hideTooltip_ = function () {\n    this.element_.classList.remove(this.CssClasses_.IS_ACTIVE);\n};\n/**\n   * Initialize element.\n   */\nMaterialTooltip.prototype.init = function () {\n    if (this.element_) {\n        var forElId = this.element_.getAttribute('for') || this.element_.getAttribute('data-mdl-for');\n        if (forElId) {\n            this.forElement_ = document.getElementById(forElId);\n        }\n        if (this.forElement_) {\n            // It's left here because it prevents accidental text selection on Android\n            if (!this.forElement_.hasAttribute('tabindex')) {\n                this.forElement_.setAttribute('tabindex', '0');\n            }\n            this.boundMouseEnterHandler = this.handleMouseEnter_.bind(this);\n            this.boundMouseLeaveAndScrollHandler = this.hideTooltip_.bind(this);\n            this.forElement_.addEventListener('mouseenter', this.boundMouseEnterHandler, false);\n            this.forElement_.addEventListener('touchend', this.boundMouseEnterHandler, false);\n            this.forElement_.addEventListener('mouseleave', this.boundMouseLeaveAndScrollHandler, false);\n            window.addEventListener('scroll', this.boundMouseLeaveAndScrollHandler, true);\n            window.addEventListener('touchstart', this.boundMouseLeaveAndScrollHandler);\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialTooltip,\n    classAsString: 'MaterialTooltip',\n    cssClass: 'mdl-tooltip'\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Data Table Card MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {Element} element The element that will be upgraded.\n   */\nvar MaterialDataTable = function MaterialDataTable(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialDataTable'] = MaterialDataTable;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialDataTable.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialDataTable.prototype.CssClasses_ = {\n    DATA_TABLE: 'mdl-data-table',\n    SELECTABLE: 'mdl-data-table--selectable',\n    SELECT_ELEMENT: 'mdl-data-table__select',\n    IS_SELECTED: 'is-selected',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Generates and returns a function that toggles the selection state of a\n   * single row (or multiple rows).\n   *\n   * @param {Element} checkbox Checkbox that toggles the selection state.\n   * @param {Element} row Row to toggle when checkbox changes.\n   * @param {(Array<Object>|NodeList)=} opt_rows Rows to toggle when checkbox changes.\n   * @private\n   */\nMaterialDataTable.prototype.selectRow_ = function (checkbox, row, opt_rows) {\n    if (row) {\n        return function () {\n            if (checkbox.checked) {\n                row.classList.add(this.CssClasses_.IS_SELECTED);\n            } else {\n                row.classList.remove(this.CssClasses_.IS_SELECTED);\n            }\n        }.bind(this);\n    }\n    if (opt_rows) {\n        return function () {\n            var i;\n            var el;\n            if (checkbox.checked) {\n                for (i = 0; i < opt_rows.length; i++) {\n                    el = opt_rows[i].querySelector('td').querySelector('.mdl-checkbox');\n                    el['MaterialCheckbox'].check();\n                    opt_rows[i].classList.add(this.CssClasses_.IS_SELECTED);\n                }\n            } else {\n                for (i = 0; i < opt_rows.length; i++) {\n                    el = opt_rows[i].querySelector('td').querySelector('.mdl-checkbox');\n                    el['MaterialCheckbox'].uncheck();\n                    opt_rows[i].classList.remove(this.CssClasses_.IS_SELECTED);\n                }\n            }\n        }.bind(this);\n    }\n};\n/**\n   * Creates a checkbox for a single or or multiple rows and hooks up the\n   * event handling.\n   *\n   * @param {Element} row Row to toggle when checkbox changes.\n   * @param {(Array<Object>|NodeList)=} opt_rows Rows to toggle when checkbox changes.\n   * @private\n   */\nMaterialDataTable.prototype.createCheckbox_ = function (row, opt_rows) {\n    var label = document.createElement('label');\n    var labelClasses = [\n        'mdl-checkbox',\n        'mdl-js-checkbox',\n        'mdl-js-ripple-effect',\n        this.CssClasses_.SELECT_ELEMENT\n    ];\n    label.className = labelClasses.join(' ');\n    var checkbox = document.createElement('input');\n    checkbox.type = 'checkbox';\n    checkbox.classList.add('mdl-checkbox__input');\n    if (row) {\n        checkbox.checked = row.classList.contains(this.CssClasses_.IS_SELECTED);\n        checkbox.addEventListener('change', this.selectRow_(checkbox, row));\n    } else if (opt_rows) {\n        checkbox.addEventListener('change', this.selectRow_(checkbox, null, opt_rows));\n    }\n    label.appendChild(checkbox);\n    componentHandler.upgradeElement(label, 'MaterialCheckbox');\n    return label;\n};\n/**\n   * Initialize element.\n   */\nMaterialDataTable.prototype.init = function () {\n    if (this.element_) {\n        var firstHeader = this.element_.querySelector('th');\n        var bodyRows = Array.prototype.slice.call(this.element_.querySelectorAll('tbody tr'));\n        var footRows = Array.prototype.slice.call(this.element_.querySelectorAll('tfoot tr'));\n        var rows = bodyRows.concat(footRows);\n        if (this.element_.classList.contains(this.CssClasses_.SELECTABLE)) {\n            var th = document.createElement('th');\n            var headerCheckbox = this.createCheckbox_(null, rows);\n            th.appendChild(headerCheckbox);\n            firstHeader.parentElement.insertBefore(th, firstHeader);\n            for (var i = 0; i < rows.length; i++) {\n                var firstCell = rows[i].querySelector('td');\n                if (firstCell) {\n                    var td = document.createElement('td');\n                    if (rows[i].parentNode.nodeName.toUpperCase() === 'TBODY') {\n                        var rowCheckbox = this.createCheckbox_(rows[i]);\n                        td.appendChild(rowCheckbox);\n                    }\n                    rows[i].insertBefore(td, firstCell);\n                }\n            }\n            this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialDataTable,\n    classAsString: 'MaterialDataTable',\n    cssClass: 'mdl-js-data-table'\n});"]}